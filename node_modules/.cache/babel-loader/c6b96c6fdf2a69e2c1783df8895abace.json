{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.configurationApi = void 0;\n\nconst ApiEndpoint_1 = require(\"./ApiEndpoint\");\n\nconst UsernamePlaceholder_1 = require(\"../../placeholders/UsernamePlaceholder\");\n\nconst hue_bridge_model_1 = require(\"@peter-murray/hue-bridge-model\");\n\nconst ApiError_1 = require(\"../../../ApiError\");\n\nconst util_1 = require(\"../../../util\");\n\nconst instanceChecks = hue_bridge_model_1.model.instanceChecks;\nconst configurationApi = {\n  createUser: new ApiEndpoint_1.ApiEndpoint().post().acceptJson().uri('/').payload(buildUserPayload).pureJson().postProcess(processCreateUser),\n  getConfiguration: new ApiEndpoint_1.ApiEndpoint().get().acceptJson().uri('/<username>/config').pureJson().postProcess(createBridgeConfiguration),\n  updateConfiguration: new ApiEndpoint_1.ApiEndpoint().put().acceptJson().uri('/<username>/config').payload(buildConfigurationPayload).pureJson().postProcess(util_1.wasSuccessful),\n  deleteUser: new ApiEndpoint_1.ApiEndpoint().delete().acceptJson().uri('/<username>/config/whitelist/<userid>').placeholder(new UsernamePlaceholder_1.UsernamePlaceholder('userid')).pureJson().postProcess(util_1.wasSuccessful),\n  getFullState: new ApiEndpoint_1.ApiEndpoint().get().acceptJson().uri('/<username>').pureJson(),\n  getUnauthenticatedConfig: new ApiEndpoint_1.ApiEndpoint().get().acceptJson().uri('/config').pureJson().postProcess(processUnauthenticatedData)\n};\nexports.configurationApi = configurationApi;\n\nfunction processCreateUser(data) {\n  if ((0, util_1.wasSuccessful)(data)) {\n    return data[0].success;\n  } else {\n    throw new ApiError_1.ApiError(`Failed to create new user: ${JSON.stringify(data)}`);\n  }\n}\n\nfunction createBridgeConfiguration(data) {\n  return hue_bridge_model_1.model.createFromBridge('configuration', undefined, data);\n}\n\nfunction processUnauthenticatedData(data) {\n  return {\n    config: data\n  };\n}\n\nfunction buildUserPayload(data) {\n  //TODO utilize the type system\n  //TODO perform validation on the strings here\n  // applicationName 0..20\n  // deviceName 0...19\n  const body = {\n    devicetype: `${data.appName}#${data.deviceName}`\n  };\n\n  if (data.generateKey) {\n    // @ts-ignore\n    body.generateclientkey = true;\n  }\n\n  return {\n    type: 'application/json',\n    body: body\n  };\n}\n\nfunction buildConfigurationPayload(parameters) {\n  const config = parameters.config;\n  let bridgeConfig;\n\n  if (instanceChecks.isBridgeConfigurationInstance(config)) {\n    bridgeConfig = config;\n  } else {\n    bridgeConfig = createBridgeConfiguration(config);\n  }\n\n  return {\n    type: 'application/json',\n    body: bridgeConfig.getHuePayload()\n  };\n}","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/node-hue-api/dist/cjs/api/http/endpoints/configuration.js"],"names":["Object","defineProperty","exports","value","configurationApi","ApiEndpoint_1","require","UsernamePlaceholder_1","hue_bridge_model_1","ApiError_1","util_1","instanceChecks","model","createUser","ApiEndpoint","post","acceptJson","uri","payload","buildUserPayload","pureJson","postProcess","processCreateUser","getConfiguration","get","createBridgeConfiguration","updateConfiguration","put","buildConfigurationPayload","wasSuccessful","deleteUser","delete","placeholder","UsernamePlaceholder","getFullState","getUnauthenticatedConfig","processUnauthenticatedData","data","success","ApiError","JSON","stringify","createFromBridge","undefined","config","body","devicetype","appName","deviceName","generateKey","generateclientkey","type","parameters","bridgeConfig","isBridgeConfigurationInstance","getHuePayload"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.configurationApi = void 0;\nconst ApiEndpoint_1 = require(\"./ApiEndpoint\");\nconst UsernamePlaceholder_1 = require(\"../../placeholders/UsernamePlaceholder\");\nconst hue_bridge_model_1 = require(\"@peter-murray/hue-bridge-model\");\nconst ApiError_1 = require(\"../../../ApiError\");\nconst util_1 = require(\"../../../util\");\nconst instanceChecks = hue_bridge_model_1.model.instanceChecks;\nconst configurationApi = {\n    createUser: new ApiEndpoint_1.ApiEndpoint()\n        .post()\n        .acceptJson()\n        .uri('/')\n        .payload(buildUserPayload)\n        .pureJson()\n        .postProcess(processCreateUser),\n    getConfiguration: new ApiEndpoint_1.ApiEndpoint()\n        .get()\n        .acceptJson()\n        .uri('/<username>/config')\n        .pureJson()\n        .postProcess(createBridgeConfiguration),\n    updateConfiguration: new ApiEndpoint_1.ApiEndpoint()\n        .put()\n        .acceptJson()\n        .uri('/<username>/config')\n        .payload(buildConfigurationPayload)\n        .pureJson()\n        .postProcess(util_1.wasSuccessful),\n    deleteUser: new ApiEndpoint_1.ApiEndpoint()\n        .delete()\n        .acceptJson()\n        .uri('/<username>/config/whitelist/<userid>')\n        .placeholder(new UsernamePlaceholder_1.UsernamePlaceholder('userid'))\n        .pureJson()\n        .postProcess(util_1.wasSuccessful),\n    getFullState: new ApiEndpoint_1.ApiEndpoint()\n        .get()\n        .acceptJson()\n        .uri('/<username>')\n        .pureJson(),\n    getUnauthenticatedConfig: new ApiEndpoint_1.ApiEndpoint()\n        .get()\n        .acceptJson()\n        .uri('/config')\n        .pureJson()\n        .postProcess(processUnauthenticatedData),\n};\nexports.configurationApi = configurationApi;\nfunction processCreateUser(data) {\n    if ((0, util_1.wasSuccessful)(data)) {\n        return data[0].success;\n    }\n    else {\n        throw new ApiError_1.ApiError(`Failed to create new user: ${JSON.stringify(data)}`);\n    }\n}\nfunction createBridgeConfiguration(data) {\n    return hue_bridge_model_1.model.createFromBridge('configuration', undefined, data);\n}\nfunction processUnauthenticatedData(data) {\n    return {\n        config: data\n    };\n}\nfunction buildUserPayload(data) {\n    //TODO utilize the type system\n    //TODO perform validation on the strings here\n    // applicationName 0..20\n    // deviceName 0...19\n    const body = {\n        devicetype: `${data.appName}#${data.deviceName}`\n    };\n    if (data.generateKey) {\n        // @ts-ignore\n        body.generateclientkey = true;\n    }\n    return {\n        type: 'application/json',\n        body: body\n    };\n}\nfunction buildConfigurationPayload(parameters) {\n    const config = parameters.config;\n    let bridgeConfig;\n    if (instanceChecks.isBridgeConfigurationInstance(config)) {\n        bridgeConfig = config;\n    }\n    else {\n        bridgeConfig = createBridgeConfiguration(config);\n    }\n    return {\n        type: 'application/json',\n        body: bridgeConfig.getHuePayload()\n    };\n}\n"]},"metadata":{},"sourceType":"script"}