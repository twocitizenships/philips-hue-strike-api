{"ast":null,"code":"\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar Events, RedisConnection, Scripts, parser;\nparser = require(\"./parser\");\nEvents = require(\"./Events\");\nScripts = require(\"./Scripts\");\n\nRedisConnection = function () {\n  class RedisConnection {\n    constructor() {\n      let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      parser.load(options, this.defaults, this);\n\n      if (this.Redis == null) {\n        this.Redis = eval(\"require\")(\"redis\"); // Obfuscated or else Webpack/Angular will try to inline the optional redis module. To override this behavior: pass the redis module to Bottleneck as the 'Redis' option.\n      }\n\n      if (this.Events == null) {\n        this.Events = new Events(this);\n      }\n\n      this.terminated = false;\n\n      if (this.client == null) {\n        this.client = this.Redis.createClient(this.clientOptions);\n      }\n\n      this.subscriber = this.client.duplicate();\n      this.limiters = {};\n      this.shas = {};\n      this.ready = this.Promise.all([this._setup(this.client, false), this._setup(this.subscriber, true)]).then(() => {\n        return this._loadScripts();\n      }).then(() => {\n        return {\n          client: this.client,\n          subscriber: this.subscriber\n        };\n      });\n    }\n\n    _setup(client, sub) {\n      client.setMaxListeners(0);\n      return new this.Promise((resolve, reject) => {\n        client.on(\"error\", e => {\n          return this.Events.trigger(\"error\", e);\n        });\n\n        if (sub) {\n          client.on(\"message\", (channel, message) => {\n            var ref;\n            return (ref = this.limiters[channel]) != null ? ref._store.onMessage(channel, message) : void 0;\n          });\n        }\n\n        if (client.ready) {\n          return resolve();\n        } else {\n          return client.once(\"ready\", resolve);\n        }\n      });\n    }\n\n    _loadScript(name) {\n      return new this.Promise((resolve, reject) => {\n        var payload;\n        payload = Scripts.payload(name);\n        return this.client.multi([[\"script\", \"load\", payload]]).exec((err, replies) => {\n          if (err != null) {\n            return reject(err);\n          }\n\n          this.shas[name] = replies[0];\n          return resolve(replies[0]);\n        });\n      });\n    }\n\n    _loadScripts() {\n      return this.Promise.all(Scripts.names.map(k => {\n        return this._loadScript(k);\n      }));\n    }\n\n    __runCommand__(cmd) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this.ready;\n        return new _this.Promise((resolve, reject) => {\n          return _this.client.multi([cmd]).exec_atomic(function (err, replies) {\n            if (err != null) {\n              return reject(err);\n            } else {\n              return resolve(replies[0]);\n            }\n          });\n        });\n      })();\n    }\n\n    __addLimiter__(instance) {\n      return this.Promise.all([instance.channel(), instance.channel_client()].map(channel => {\n        return new this.Promise((resolve, reject) => {\n          var handler;\n\n          handler = chan => {\n            if (chan === channel) {\n              this.subscriber.removeListener(\"subscribe\", handler);\n              this.limiters[channel] = instance;\n              return resolve();\n            }\n          };\n\n          this.subscriber.on(\"subscribe\", handler);\n          return this.subscriber.subscribe(channel);\n        });\n      }));\n    }\n\n    __removeLimiter__(instance) {\n      var _this2 = this;\n\n      return this.Promise.all([instance.channel(), instance.channel_client()].map( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (channel) {\n          if (!_this2.terminated) {\n            yield new _this2.Promise((resolve, reject) => {\n              return _this2.subscriber.unsubscribe(channel, function (err, chan) {\n                if (err != null) {\n                  return reject(err);\n                }\n\n                if (chan === channel) {\n                  return resolve();\n                }\n              });\n            });\n          }\n\n          return delete _this2.limiters[channel];\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()));\n    }\n\n    __scriptArgs__(name, id, args, cb) {\n      var keys;\n      keys = Scripts.keys(name, id);\n      return [this.shas[name], keys.length].concat(keys, args, cb);\n    }\n\n    __scriptFn__(name) {\n      return this.client.evalsha.bind(this.client);\n    }\n\n    disconnect() {\n      let flush = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var i, k, len, ref;\n      ref = Object.keys(this.limiters);\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        k = ref[i];\n        clearInterval(this.limiters[k]._store.heartbeat);\n      }\n\n      this.limiters = {};\n      this.terminated = true;\n      this.client.end(flush);\n      this.subscriber.end(flush);\n      return this.Promise.resolve();\n    }\n\n  }\n\n  ;\n  RedisConnection.prototype.datastore = \"redis\";\n  RedisConnection.prototype.defaults = {\n    Redis: null,\n    clientOptions: {},\n    client: null,\n    Promise: Promise,\n    Events: null\n  };\n  return RedisConnection;\n}.call(void 0);\n\nmodule.exports = RedisConnection;","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/bottleneck/lib/RedisConnection.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","Events","RedisConnection","Scripts","parser","require","constructor","options","load","defaults","Redis","eval","terminated","client","createClient","clientOptions","subscriber","duplicate","limiters","shas","ready","all","_setup","_loadScripts","sub","setMaxListeners","on","e","trigger","channel","message","ref","_store","onMessage","once","_loadScript","name","payload","multi","exec","replies","names","map","k","__runCommand__","cmd","_this","exec_atomic","__addLimiter__","instance","channel_client","handler","chan","removeListener","subscribe","__removeLimiter__","_this2","_ref","unsubscribe","_x","__scriptArgs__","id","cb","keys","length","concat","__scriptFn__","evalsha","bind","disconnect","flush","i","len","Object","clearInterval","heartbeat","end","prototype","datastore","call","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Events, RedisConnection, Scripts, parser;\nparser = require(\"./parser\");\nEvents = require(\"./Events\");\nScripts = require(\"./Scripts\");\n\nRedisConnection = function () {\n  class RedisConnection {\n    constructor(options = {}) {\n      parser.load(options, this.defaults, this);\n\n      if (this.Redis == null) {\n        this.Redis = eval(\"require\")(\"redis\"); // Obfuscated or else Webpack/Angular will try to inline the optional redis module. To override this behavior: pass the redis module to Bottleneck as the 'Redis' option.\n      }\n\n      if (this.Events == null) {\n        this.Events = new Events(this);\n      }\n\n      this.terminated = false;\n\n      if (this.client == null) {\n        this.client = this.Redis.createClient(this.clientOptions);\n      }\n\n      this.subscriber = this.client.duplicate();\n      this.limiters = {};\n      this.shas = {};\n      this.ready = this.Promise.all([this._setup(this.client, false), this._setup(this.subscriber, true)]).then(() => {\n        return this._loadScripts();\n      }).then(() => {\n        return {\n          client: this.client,\n          subscriber: this.subscriber\n        };\n      });\n    }\n\n    _setup(client, sub) {\n      client.setMaxListeners(0);\n      return new this.Promise((resolve, reject) => {\n        client.on(\"error\", e => {\n          return this.Events.trigger(\"error\", e);\n        });\n\n        if (sub) {\n          client.on(\"message\", (channel, message) => {\n            var ref;\n            return (ref = this.limiters[channel]) != null ? ref._store.onMessage(channel, message) : void 0;\n          });\n        }\n\n        if (client.ready) {\n          return resolve();\n        } else {\n          return client.once(\"ready\", resolve);\n        }\n      });\n    }\n\n    _loadScript(name) {\n      return new this.Promise((resolve, reject) => {\n        var payload;\n        payload = Scripts.payload(name);\n        return this.client.multi([[\"script\", \"load\", payload]]).exec((err, replies) => {\n          if (err != null) {\n            return reject(err);\n          }\n\n          this.shas[name] = replies[0];\n          return resolve(replies[0]);\n        });\n      });\n    }\n\n    _loadScripts() {\n      return this.Promise.all(Scripts.names.map(k => {\n        return this._loadScript(k);\n      }));\n    }\n\n    __runCommand__(cmd) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this.ready;\n        return new _this.Promise((resolve, reject) => {\n          return _this.client.multi([cmd]).exec_atomic(function (err, replies) {\n            if (err != null) {\n              return reject(err);\n            } else {\n              return resolve(replies[0]);\n            }\n          });\n        });\n      })();\n    }\n\n    __addLimiter__(instance) {\n      return this.Promise.all([instance.channel(), instance.channel_client()].map(channel => {\n        return new this.Promise((resolve, reject) => {\n          var handler;\n\n          handler = chan => {\n            if (chan === channel) {\n              this.subscriber.removeListener(\"subscribe\", handler);\n              this.limiters[channel] = instance;\n              return resolve();\n            }\n          };\n\n          this.subscriber.on(\"subscribe\", handler);\n          return this.subscriber.subscribe(channel);\n        });\n      }));\n    }\n\n    __removeLimiter__(instance) {\n      var _this2 = this;\n\n      return this.Promise.all([instance.channel(), instance.channel_client()].map(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(function* (channel) {\n          if (!_this2.terminated) {\n            yield new _this2.Promise((resolve, reject) => {\n              return _this2.subscriber.unsubscribe(channel, function (err, chan) {\n                if (err != null) {\n                  return reject(err);\n                }\n\n                if (chan === channel) {\n                  return resolve();\n                }\n              });\n            });\n          }\n\n          return delete _this2.limiters[channel];\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()));\n    }\n\n    __scriptArgs__(name, id, args, cb) {\n      var keys;\n      keys = Scripts.keys(name, id);\n      return [this.shas[name], keys.length].concat(keys, args, cb);\n    }\n\n    __scriptFn__(name) {\n      return this.client.evalsha.bind(this.client);\n    }\n\n    disconnect(flush = true) {\n      var i, k, len, ref;\n      ref = Object.keys(this.limiters);\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        k = ref[i];\n        clearInterval(this.limiters[k]._store.heartbeat);\n      }\n\n      this.limiters = {};\n      this.terminated = true;\n      this.client.end(flush);\n      this.subscriber.end(flush);\n      return this.Promise.resolve();\n    }\n\n  }\n\n  ;\n  RedisConnection.prototype.datastore = \"redis\";\n  RedisConnection.prototype.defaults = {\n    Redis: null,\n    clientOptions: {},\n    client: null,\n    Promise: Promise,\n    Events: null\n  };\n  return RedisConnection;\n}.call(void 0);\n\nmodule.exports = RedisConnection;"]},"metadata":{},"sourceType":"script"}