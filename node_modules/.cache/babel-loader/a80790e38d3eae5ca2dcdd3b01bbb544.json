{"ast":null,"code":"import { BridgeObject } from '../BridgeObject';\nimport { ChoiceType } from '../../types';\nconst ATTRIBUTES = [new ChoiceType({\n  name: 'method',\n  validValues: ['PUT', 'POST', 'DELETE']\n}), new ChoiceType({\n  name: 'target',\n  validValues: ['rule', 'schedule']\n})];\nexport class BridgeAction extends BridgeObject {\n  constructor(attributes, method) {\n    super([...ATTRIBUTES, ...attributes]);\n    this.withMethod(method);\n  }\n\n  get method() {\n    return this.getAttributeValue('method');\n  } //TODO maybe unnecessary\n\n\n  get isRuleAction() {\n    return this.getAttributeValue('target') === 'rule';\n  } //TODO maybe unnecessary\n\n\n  get isScheduleAction() {\n    return this.getAttributeValue('target') === 'schedule';\n  }\n\n  withMethod(value) {\n    return this.setAttributeValue('method', value);\n  } //TODO revisit this\n\n\n  get payload() {\n    return {\n      address: this.address,\n      method: this.method,\n      body: this.body\n    };\n  }\n\n  toString() {\n    return JSON.stringify(this.payload);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/@peter-murray/hue-bridge-model/dist/esm/model/actions/BridgeAction.js"],"names":["BridgeObject","ChoiceType","ATTRIBUTES","name","validValues","BridgeAction","constructor","attributes","method","withMethod","getAttributeValue","isRuleAction","isScheduleAction","value","setAttributeValue","payload","address","body","toString","JSON","stringify"],"mappings":"AAAA,SAASA,YAAT,QAA6B,iBAA7B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,MAAMC,UAAU,GAAG,CACf,IAAID,UAAJ,CAAe;AAAEE,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,WAAW,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB;AAA/B,CAAf,CADe,EAEf,IAAIH,UAAJ,CAAe;AAAEE,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,WAAW,EAAE,CAAC,MAAD,EAAS,UAAT;AAA/B,CAAf,CAFe,CAAnB;AAIA,OAAO,MAAMC,YAAN,SAA2BL,YAA3B,CAAwC;AAC3CM,EAAAA,WAAW,CAACC,UAAD,EAAaC,MAAb,EAAqB;AAC5B,UAAM,CAAC,GAAGN,UAAJ,EAAgB,GAAGK,UAAnB,CAAN;AACA,SAAKE,UAAL,CAAgBD,MAAhB;AACH;;AACS,MAANA,MAAM,GAAG;AACT,WAAO,KAAKE,iBAAL,CAAuB,QAAvB,CAAP;AACH,GAP0C,CAQ3C;;;AACgB,MAAZC,YAAY,GAAG;AACf,WAAO,KAAKD,iBAAL,CAAuB,QAAvB,MAAqC,MAA5C;AACH,GAX0C,CAY3C;;;AACoB,MAAhBE,gBAAgB,GAAG;AACnB,WAAO,KAAKF,iBAAL,CAAuB,QAAvB,MAAqC,UAA5C;AACH;;AACDD,EAAAA,UAAU,CAACI,KAAD,EAAQ;AACd,WAAO,KAAKC,iBAAL,CAAuB,QAAvB,EAAiCD,KAAjC,CAAP;AACH,GAlB0C,CAmB3C;;;AACW,MAAPE,OAAO,GAAG;AACV,WAAO;AACHC,MAAAA,OAAO,EAAE,KAAKA,OADX;AAEHR,MAAAA,MAAM,EAAE,KAAKA,MAFV;AAGHS,MAAAA,IAAI,EAAE,KAAKA;AAHR,KAAP;AAKH;;AACDC,EAAAA,QAAQ,GAAG;AACP,WAAOC,IAAI,CAACC,SAAL,CAAe,KAAKL,OAApB,CAAP;AACH;;AA7B0C;AA+B/C","sourcesContent":["import { BridgeObject } from '../BridgeObject';\nimport { ChoiceType } from '../../types';\nconst ATTRIBUTES = [\n    new ChoiceType({ name: 'method', validValues: ['PUT', 'POST', 'DELETE'] }),\n    new ChoiceType({ name: 'target', validValues: ['rule', 'schedule'] }),\n];\nexport class BridgeAction extends BridgeObject {\n    constructor(attributes, method) {\n        super([...ATTRIBUTES, ...attributes]);\n        this.withMethod(method);\n    }\n    get method() {\n        return this.getAttributeValue('method');\n    }\n    //TODO maybe unnecessary\n    get isRuleAction() {\n        return this.getAttributeValue('target') === 'rule';\n    }\n    //TODO maybe unnecessary\n    get isScheduleAction() {\n        return this.getAttributeValue('target') === 'schedule';\n    }\n    withMethod(value) {\n        return this.setAttributeValue('method', value);\n    }\n    //TODO revisit this\n    get payload() {\n        return {\n            address: this.address,\n            method: this.method,\n            body: this.body\n        };\n    }\n    toString() {\n        return JSON.stringify(this.payload);\n    }\n}\n;\n"]},"metadata":{},"sourceType":"module"}