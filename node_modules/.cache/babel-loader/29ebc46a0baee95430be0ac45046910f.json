{"ast":null,"code":"import { BooleanType, UInt16Type } from '../../types';\nimport { Sensor } from './Sensor';\nconst CONFIG_ATTRIBUTES = [new UInt16Type({\n  name: 'tholddark',\n  defaultValue: 16000\n}), new UInt16Type({\n  name: 'tholdoffset',\n  min: 1,\n  defaultValue: 7000\n})];\nconst STATE_ATTRIBUTES = [new UInt16Type({\n  name: 'lightlevel'\n}), new BooleanType({\n  name: 'dark'\n}), new BooleanType({\n  name: 'daylight'\n})];\nexport class ZLLLightlevel extends Sensor {\n  constructor(id) {\n    super(CONFIG_ATTRIBUTES, STATE_ATTRIBUTES, id);\n  }\n\n  get tholddark() {\n    return this.getConfigAttributeValue('tholddark');\n  }\n\n  set tholddark(value) {\n    this._updateConfigAttributeValue('tholddark', value);\n  }\n\n  get thresholdDark() {\n    return this.tholddark;\n  }\n\n  get tholdoffset() {\n    return this.getConfigAttributeValue('tholdoffset');\n  }\n\n  set tholdoffset(value) {\n    this._updateConfigAttributeValue('tholdoffset', value);\n  }\n\n  get thresholdOffset() {\n    return this.tholdoffset;\n  }\n\n  get lightlevel() {\n    return this.getStateAttributeValue('lightlevel');\n  }\n\n  set lightlevel(value) {\n    this._updateStateAttributeValue('lightlevel', value);\n  }\n\n  get dark() {\n    return this.getStateAttributeValue('dark');\n  } //TODO validate we can set this\n  // set dark(value) {\n  //   return this._updateStateAttributeValue('dark', value);\n  // }\n\n\n  get daylight() {\n    return this.getStateAttributeValue('daylight');\n  }\n\n}","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/@peter-murray/hue-bridge-model/dist/esm/model/sensors/ZLLLightlevel.js"],"names":["BooleanType","UInt16Type","Sensor","CONFIG_ATTRIBUTES","name","defaultValue","min","STATE_ATTRIBUTES","ZLLLightlevel","constructor","id","tholddark","getConfigAttributeValue","value","_updateConfigAttributeValue","thresholdDark","tholdoffset","thresholdOffset","lightlevel","getStateAttributeValue","_updateStateAttributeValue","dark","daylight"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,aAAxC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,MAAMC,iBAAiB,GAAG,CACtB,IAAIF,UAAJ,CAAe;AAAEG,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,YAAY,EAAE;AAAnC,CAAf,CADsB,EAEtB,IAAIJ,UAAJ,CAAe;AAAEG,EAAAA,IAAI,EAAE,aAAR;AAAuBE,EAAAA,GAAG,EAAE,CAA5B;AAA+BD,EAAAA,YAAY,EAAE;AAA7C,CAAf,CAFsB,CAA1B;AAIA,MAAME,gBAAgB,GAAG,CACrB,IAAIN,UAAJ,CAAe;AAAEG,EAAAA,IAAI,EAAE;AAAR,CAAf,CADqB,EAErB,IAAIJ,WAAJ,CAAgB;AAAEI,EAAAA,IAAI,EAAE;AAAR,CAAhB,CAFqB,EAGrB,IAAIJ,WAAJ,CAAgB;AAAEI,EAAAA,IAAI,EAAE;AAAR,CAAhB,CAHqB,CAAzB;AAKA,OAAO,MAAMI,aAAN,SAA4BN,MAA5B,CAAmC;AACtCO,EAAAA,WAAW,CAACC,EAAD,EAAK;AACZ,UAAMP,iBAAN,EAAyBI,gBAAzB,EAA2CG,EAA3C;AACH;;AACY,MAATC,SAAS,GAAG;AACZ,WAAO,KAAKC,uBAAL,CAA6B,WAA7B,CAAP;AACH;;AACY,MAATD,SAAS,CAACE,KAAD,EAAQ;AACjB,SAAKC,2BAAL,CAAiC,WAAjC,EAA8CD,KAA9C;AACH;;AACgB,MAAbE,aAAa,GAAG;AAChB,WAAO,KAAKJ,SAAZ;AACH;;AACc,MAAXK,WAAW,GAAG;AACd,WAAO,KAAKJ,uBAAL,CAA6B,aAA7B,CAAP;AACH;;AACc,MAAXI,WAAW,CAACH,KAAD,EAAQ;AACnB,SAAKC,2BAAL,CAAiC,aAAjC,EAAgDD,KAAhD;AACH;;AACkB,MAAfI,eAAe,GAAG;AAClB,WAAO,KAAKD,WAAZ;AACH;;AACa,MAAVE,UAAU,GAAG;AACb,WAAO,KAAKC,sBAAL,CAA4B,YAA5B,CAAP;AACH;;AACa,MAAVD,UAAU,CAACL,KAAD,EAAQ;AAClB,SAAKO,0BAAL,CAAgC,YAAhC,EAA8CP,KAA9C;AACH;;AACO,MAAJQ,IAAI,GAAG;AACP,WAAO,KAAKF,sBAAL,CAA4B,MAA5B,CAAP;AACH,GA9BqC,CA+BtC;AACA;AACA;AACA;;;AACY,MAARG,QAAQ,GAAG;AACX,WAAO,KAAKH,sBAAL,CAA4B,UAA5B,CAAP;AACH;;AArCqC","sourcesContent":["import { BooleanType, UInt16Type } from '../../types';\nimport { Sensor } from './Sensor';\nconst CONFIG_ATTRIBUTES = [\n    new UInt16Type({ name: 'tholddark', defaultValue: 16000 }),\n    new UInt16Type({ name: 'tholdoffset', min: 1, defaultValue: 7000 }),\n];\nconst STATE_ATTRIBUTES = [\n    new UInt16Type({ name: 'lightlevel' }),\n    new BooleanType({ name: 'dark' }),\n    new BooleanType({ name: 'daylight' }),\n];\nexport class ZLLLightlevel extends Sensor {\n    constructor(id) {\n        super(CONFIG_ATTRIBUTES, STATE_ATTRIBUTES, id);\n    }\n    get tholddark() {\n        return this.getConfigAttributeValue('tholddark');\n    }\n    set tholddark(value) {\n        this._updateConfigAttributeValue('tholddark', value);\n    }\n    get thresholdDark() {\n        return this.tholddark;\n    }\n    get tholdoffset() {\n        return this.getConfigAttributeValue('tholdoffset');\n    }\n    set tholdoffset(value) {\n        this._updateConfigAttributeValue('tholdoffset', value);\n    }\n    get thresholdOffset() {\n        return this.tholdoffset;\n    }\n    get lightlevel() {\n        return this.getStateAttributeValue('lightlevel');\n    }\n    set lightlevel(value) {\n        this._updateStateAttributeValue('lightlevel', value);\n    }\n    get dark() {\n        return this.getStateAttributeValue('dark');\n    }\n    //TODO validate we can set this\n    // set dark(value) {\n    //   return this._updateStateAttributeValue('dark', value);\n    // }\n    get daylight() {\n        return this.getStateAttributeValue('daylight');\n    }\n}\n"]},"metadata":{},"sourceType":"module"}