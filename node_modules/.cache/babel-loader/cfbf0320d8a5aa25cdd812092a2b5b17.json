{"ast":null,"code":"/*! MIT License © Sindre Sorhus */\nimport { Ky } from './core/Ky.js';\nimport { requestMethods, stop } from './core/constants.js';\nimport { validateAndMerge } from './utils/merge.js';\n\nconst createInstance = defaults => {\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  const ky = (input, options) => Ky.create(input, validateAndMerge(defaults, options));\n\n  for (const method of requestMethods) {\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    ky[method] = (input, options) => Ky.create(input, validateAndMerge(defaults, options, {\n      method\n    }));\n  }\n\n  ky.create = newDefaults => createInstance(validateAndMerge(newDefaults));\n\n  ky.extend = newDefaults => createInstance(validateAndMerge(defaults, newDefaults));\n\n  ky.stop = stop;\n  return ky;\n};\n\nconst ky = createInstance();\nexport default ky;\nexport { HTTPError } from './errors/HTTPError.js';\nexport { TimeoutError } from './errors/TimeoutError.js';","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/ky/source/index.ts"],"names":[],"mappings":"AAAA;AAEA,SAAQ,EAAR,QAAiB,cAAjB;AACA,SAAQ,cAAR,EAAwB,IAAxB,QAAmC,qBAAnC;AAGA,SAAQ,gBAAR,QAA+B,kBAA/B;;AAGA,MAAM,cAAc,GAAI,QAAD,IAA4C;AAClE;AACA,QAAM,EAAE,GAAiC,CAAC,KAAD,EAAe,OAAf,KAAqC,EAAE,CAAC,MAAH,CAAU,KAAV,EAAiB,gBAAgB,CAAC,QAAD,EAAW,OAAX,CAAjC,CAA9E;;AAEA,OAAK,MAAM,MAAX,IAAqB,cAArB,EAAqC;AACpC;AACA,IAAA,EAAE,CAAC,MAAD,CAAF,GAAa,CAAC,KAAD,EAAe,OAAf,KAAqC,EAAE,CAAC,MAAH,CAAU,KAAV,EAAiB,gBAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB;AAAC,MAAA;AAAD,KAApB,CAAjC,CAAlD;AACA;;AAED,EAAA,EAAE,CAAC,MAAH,GAAa,WAAD,IAAoC,cAAc,CAAC,gBAAgB,CAAC,WAAD,CAAjB,CAA9D;;AACA,EAAA,EAAE,CAAC,MAAH,GAAa,WAAD,IAAoC,cAAc,CAAC,gBAAgB,CAAC,QAAD,EAAW,WAAX,CAAjB,CAA9D;;AACA,EAAA,EAAE,CAAC,IAAH,GAAU,IAAV;AAEA,SAAO,EAAP;AACA,CAdD;;AAgBA,MAAM,EAAE,GAAG,cAAc,EAAzB;AAEA,eAAe,EAAf;AAkBA,SAAQ,SAAR,QAAwB,uBAAxB;AACA,SAAQ,YAAR,QAA2B,0BAA3B","sourcesContent":["/*! MIT License © Sindre Sorhus */\n\nimport {Ky} from './core/Ky.js';\nimport {requestMethods, stop} from './core/constants.js';\nimport type {KyInstance} from './types/ky.js';\nimport type {Input, Options} from './types/options.js';\nimport {validateAndMerge} from './utils/merge.js';\nimport {Mutable} from './utils/types.js';\n\nconst createInstance = (defaults?: Partial<Options>): KyInstance => {\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tconst ky: Partial<Mutable<KyInstance>> = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options));\n\n\tfor (const method of requestMethods) {\n\t\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\t\tky[method] = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options, {method}));\n\t}\n\n\tky.create = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(newDefaults));\n\tky.extend = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(defaults, newDefaults));\n\tky.stop = stop;\n\n\treturn ky as KyInstance;\n};\n\nconst ky = createInstance();\n\nexport default ky;\n\nexport {\n\tOptions,\n\tNormalizedOptions,\n\tRetryOptions,\n\tSearchParamsOption,\n\tDownloadProgress,\n} from './types/options.js';\n\nexport {\n\tHooks,\n\tBeforeRequestHook,\n\tBeforeRetryHook,\n\tAfterResponseHook,\n} from './types/hooks.js';\n\nexport {ResponsePromise} from './types/response.js';\nexport {HTTPError} from './errors/HTTPError.js';\nexport {TimeoutError} from './errors/TimeoutError.js';\n"]},"metadata":{},"sourceType":"module"}