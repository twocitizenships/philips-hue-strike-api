{"ast":null,"code":"export function isValueDefined(value) {\n  return value !== null && value !== undefined && value !== Number.NaN;\n}\nexport class BaseType {\n  constructor(config) {\n    if (!config.name) {\n      throw new TypeError('A name must be specified');\n    } // this._name = config.name;\n\n\n    this.name = config.name;\n\n    if (!config.type) {\n      throw new TypeError('A type must be specified');\n    }\n\n    this.type = config.type; // Optional configuration values\n\n    this.optional = Boolean(isValueDefined(config.optional) ? config.optional : true);\n    this.defaultValue = isValueDefined(config.defaultValue) ? config.defaultValue : null; // null is considered unset in a Type\n  }\n\n  hasDefaultValue() {\n    return isValueDefined(this.defaultValue);\n  }\n\n  getValue(val) {\n    if (isValueDefined(val)) {\n      return this._convertToType(val);\n    } else {\n      if (this.hasDefaultValue()) {\n        return this._convertToType(this.defaultValue);\n      } else {\n        if (this.optional) {\n          // Value not defined (i.e. null or undefined or Number.NaN)\n          return null;\n        } else {\n          throw new TypeError(`No value provided and '${this.name}' is not optional`);\n        }\n      }\n    }\n  }\n\n  _convertToType(val) {\n    return val;\n  }\n\n}","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/@peter-murray/hue-bridge-model/dist/esm/types/BaseType.js"],"names":["isValueDefined","value","undefined","Number","NaN","BaseType","constructor","config","name","TypeError","type","optional","Boolean","defaultValue","hasDefaultValue","getValue","val","_convertToType"],"mappings":"AAAA,OAAO,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAClC,SAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKC,SAA5B,IAAyCD,KAAK,KAAKE,MAAM,CAACC,GAAjE;AACH;AACD,OAAO,MAAMC,QAAN,CAAe;AAClBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,QAAI,CAACA,MAAM,CAACC,IAAZ,EAAkB;AACd,YAAM,IAAIC,SAAJ,CAAc,0BAAd,CAAN;AACH,KAHe,CAIhB;;;AACA,SAAKD,IAAL,GAAYD,MAAM,CAACC,IAAnB;;AACA,QAAI,CAACD,MAAM,CAACG,IAAZ,EAAkB;AACd,YAAM,IAAID,SAAJ,CAAc,0BAAd,CAAN;AACH;;AACD,SAAKC,IAAL,GAAYH,MAAM,CAACG,IAAnB,CATgB,CAUhB;;AACA,SAAKC,QAAL,GAAgBC,OAAO,CAACZ,cAAc,CAACO,MAAM,CAACI,QAAR,CAAd,GAAkCJ,MAAM,CAACI,QAAzC,GAAoD,IAArD,CAAvB;AACA,SAAKE,YAAL,GAAoBb,cAAc,CAACO,MAAM,CAACM,YAAR,CAAd,GAAsCN,MAAM,CAACM,YAA7C,GAA4D,IAAhF,CAZgB,CAYsE;AACzF;;AACDC,EAAAA,eAAe,GAAG;AACd,WAAOd,cAAc,CAAC,KAAKa,YAAN,CAArB;AACH;;AACDE,EAAAA,QAAQ,CAACC,GAAD,EAAM;AACV,QAAIhB,cAAc,CAACgB,GAAD,CAAlB,EAAyB;AACrB,aAAO,KAAKC,cAAL,CAAoBD,GAApB,CAAP;AACH,KAFD,MAGK;AACD,UAAI,KAAKF,eAAL,EAAJ,EAA4B;AACxB,eAAO,KAAKG,cAAL,CAAoB,KAAKJ,YAAzB,CAAP;AACH,OAFD,MAGK;AACD,YAAI,KAAKF,QAAT,EAAmB;AACf;AACA,iBAAO,IAAP;AACH,SAHD,MAIK;AACD,gBAAM,IAAIF,SAAJ,CAAe,0BAAyB,KAAKD,IAAK,mBAAlD,CAAN;AACH;AACJ;AACJ;AACJ;;AACDS,EAAAA,cAAc,CAACD,GAAD,EAAM;AAChB,WAAOA,GAAP;AACH;;AAvCiB","sourcesContent":["export function isValueDefined(value) {\n    return value !== null && value !== undefined && value !== Number.NaN;\n}\nexport class BaseType {\n    constructor(config) {\n        if (!config.name) {\n            throw new TypeError('A name must be specified');\n        }\n        // this._name = config.name;\n        this.name = config.name;\n        if (!config.type) {\n            throw new TypeError('A type must be specified');\n        }\n        this.type = config.type;\n        // Optional configuration values\n        this.optional = Boolean(isValueDefined(config.optional) ? config.optional : true);\n        this.defaultValue = isValueDefined(config.defaultValue) ? config.defaultValue : null; // null is considered unset in a Type\n    }\n    hasDefaultValue() {\n        return isValueDefined(this.defaultValue);\n    }\n    getValue(val) {\n        if (isValueDefined(val)) {\n            return this._convertToType(val);\n        }\n        else {\n            if (this.hasDefaultValue()) {\n                return this._convertToType(this.defaultValue);\n            }\n            else {\n                if (this.optional) {\n                    // Value not defined (i.e. null or undefined or Number.NaN)\n                    return null;\n                }\n                else {\n                    throw new TypeError(`No value provided and '${this.name}' is not optional`);\n                }\n            }\n        }\n    }\n    _convertToType(val) {\n        return val;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}