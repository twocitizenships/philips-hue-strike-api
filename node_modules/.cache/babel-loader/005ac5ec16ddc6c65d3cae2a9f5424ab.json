{"ast":null,"code":"\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar DLList, Sync;\nDLList = require(\"./DLList\");\nSync = class Sync {\n  constructor(name, Promise) {\n    this.schedule = this.schedule.bind(this);\n    this.name = name;\n    this.Promise = Promise;\n    this._running = 0;\n    this._queue = new DLList();\n  }\n\n  isEmpty() {\n    return this._queue.length === 0;\n  }\n\n  _tryToRun() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var args, cb, error, reject, resolve, returned, task;\n\n      if (_this._running < 1 && _this._queue.length > 0) {\n        _this._running++;\n\n        var _this$_queue$shift = _this._queue.shift();\n\n        task = _this$_queue$shift.task;\n        args = _this$_queue$shift.args;\n        resolve = _this$_queue$shift.resolve;\n        reject = _this$_queue$shift.reject;\n        cb = yield _asyncToGenerator(function* () {\n          try {\n            returned = yield task(...args);\n            return function () {\n              return resolve(returned);\n            };\n          } catch (error1) {\n            error = error1;\n            return function () {\n              return reject(error);\n            };\n          }\n        })();\n        _this._running--;\n\n        _this._tryToRun();\n\n        return cb();\n      }\n    })();\n  }\n\n  schedule(task) {\n    var promise, reject, resolve;\n    resolve = reject = null;\n    promise = new this.Promise(function (_resolve, _reject) {\n      resolve = _resolve;\n      return reject = _reject;\n    });\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    this._queue.push({\n      task,\n      args,\n      resolve,\n      reject\n    });\n\n    this._tryToRun();\n\n    return promise;\n  }\n\n};\nmodule.exports = Sync;","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/bottleneck/lib/Sync.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","DLList","Sync","require","constructor","name","schedule","bind","_running","_queue","isEmpty","length","_tryToRun","_this","cb","returned","task","_this$_queue$shift","shift","error1","promise","_resolve","_reject","push","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar DLList, Sync;\nDLList = require(\"./DLList\");\nSync = class Sync {\n  constructor(name, Promise) {\n    this.schedule = this.schedule.bind(this);\n    this.name = name;\n    this.Promise = Promise;\n    this._running = 0;\n    this._queue = new DLList();\n  }\n\n  isEmpty() {\n    return this._queue.length === 0;\n  }\n\n  _tryToRun() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var args, cb, error, reject, resolve, returned, task;\n\n      if (_this._running < 1 && _this._queue.length > 0) {\n        _this._running++;\n\n        var _this$_queue$shift = _this._queue.shift();\n\n        task = _this$_queue$shift.task;\n        args = _this$_queue$shift.args;\n        resolve = _this$_queue$shift.resolve;\n        reject = _this$_queue$shift.reject;\n        cb = yield _asyncToGenerator(function* () {\n          try {\n            returned = yield task(...args);\n            return function () {\n              return resolve(returned);\n            };\n          } catch (error1) {\n            error = error1;\n            return function () {\n              return reject(error);\n            };\n          }\n        })();\n        _this._running--;\n\n        _this._tryToRun();\n\n        return cb();\n      }\n    })();\n  }\n\n  schedule(task, ...args) {\n    var promise, reject, resolve;\n    resolve = reject = null;\n    promise = new this.Promise(function (_resolve, _reject) {\n      resolve = _resolve;\n      return reject = _reject;\n    });\n\n    this._queue.push({\n      task,\n      args,\n      resolve,\n      reject\n    });\n\n    this._tryToRun();\n\n    return promise;\n  }\n\n};\nmodule.exports = Sync;"]},"metadata":{},"sourceType":"script"}