{"ast":null,"code":"var _jsxFileName = \"/Users/clusk/Documents/OtherRepositories/strike-tipping-widget/src/components/Invoice.js\";\nimport React from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { Button, CircularProgress, Modal, Box, Typography, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getQuoteExpirationSeconds = quote => {\n  var dif = new Date().getTime() - new Date(quote.expiration).getTime();\n  var Seconds_from_T1_to_T2 = dif / 1000;\n  var Seconds_Between_Dates = Math.abs(Seconds_from_T1_to_T2);\n  return Math.floor(Seconds_Between_Dates);\n};\n\nexport const Invoice = _ref => {\n  let {\n    quote,\n    size,\n    ...rest\n  } = _ref;\n  const link = `lightning:${quote.lnInvoice}`;\n  return /*#__PURE__*/_jsxDEV(Box, { ...rest,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: link,\n      children: /*#__PURE__*/_jsxDEV(QRCode, {\n        size: size,\n        value: quote.lnInvoice.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      children: `Expires in ${getQuoteExpirationSeconds(quote)} seconds`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/strike-tipping-widget/src/components/Invoice.js"],"names":["React","QRCode","Button","CircularProgress","Modal","Box","Typography","Grid","getQuoteExpirationSeconds","quote","dif","Date","getTime","expiration","Seconds_from_T1_to_T2","Seconds_Between_Dates","Math","abs","floor","Invoice","size","rest","link","lnInvoice","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,EAAiBC,gBAAjB,EAAmCC,KAAnC,EAA0CC,GAA1C,EAA+CC,UAA/C,EAA2DC,IAA3D,QAAuE,eAAvE;;;AAEA,MAAMC,yBAAyB,GAAGC,KAAK,IAAI;AACzC,MAAIC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAID,IAAJ,CAASF,KAAK,CAACI,UAAf,EAA2BD,OAA3B,EAAjC;AACA,MAAIE,qBAAqB,GAAGJ,GAAG,GAAG,IAAlC;AACA,MAAIK,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAASH,qBAAT,CAA5B;AACA,SAAOE,IAAI,CAACE,KAAL,CAAWH,qBAAX,CAAP;AACD,CALD;;AAOA,OAAO,MAAMI,OAAO,GAAG,QAA8B;AAAA,MAA7B;AAAEV,IAAAA,KAAF;AAASW,IAAAA,IAAT;AAAe,OAAGC;AAAlB,GAA6B;AACnD,QAAMC,IAAI,GAAI,aAAYb,KAAK,CAACc,SAAU,EAA1C;AACA,sBACE,QAAC,GAAD,OAASF,IAAT;AAAA,4BACE;AAAG,MAAA,IAAI,EAAEC,IAAT;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEF,IAAd;AAAoB,QAAA,KAAK,EAAEX,KAAK,CAACc,SAAN,CAAgBC,WAAhB;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAAA,gBAA6B,cAAahB,yBAAyB,CAACC,KAAD,CAAQ;AAA3E;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVM;KAAMU,O","sourcesContent":["import React from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { Button, CircularProgress, Modal, Box, Typography, Grid } from '@mui/material';\n\nconst getQuoteExpirationSeconds = quote => {\n  var dif = new Date().getTime() - new Date(quote.expiration).getTime();\n  var Seconds_from_T1_to_T2 = dif / 1000;\n  var Seconds_Between_Dates = Math.abs(Seconds_from_T1_to_T2);\n  return Math.floor(Seconds_Between_Dates);\n}\n\nexport const Invoice = ({ quote, size, ...rest }) => {\n  const link = `lightning:${quote.lnInvoice}`;\n  return (\n    <Box {...rest}>\n      <a href={link}>\n        <QRCode size={size} value={quote.lnInvoice.toUpperCase()} />\n      </a>\n      <Typography align=\"center\">{`Expires in ${getQuoteExpirationSeconds(quote)} seconds`}</Typography>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}