{"ast":null,"code":"var _jsxFileName = \"/Users/clusk/Documents/OtherRepositories/StrikeElectric/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, CircularProgress, Popover } from '@mui/material';\nimport { Invoice } from './components';\nimport { api, INVOICE_STATE_UNPAID, INVOICE_STATE_PAID } from './lib/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PARTNER_API_URL = \"https://api.next.strike.me/v1/\";\nconst THEME_DEFAULT = 'default';\nconst THEME_NONE = 'none';\n\nconst getDefaultCurrency = profile => {\n  return profile.currencies.find(c => c.isDefaultCurrency).currency;\n};\n\nconst createInvoice = async (handle, amount, currency) => {\n  return await api.createInvoice(handle, amount, currency);\n};\n\nconst createQuote = async invoiceId => {\n  return await api.createQuote(invoiceId);\n};\n\nconst getInvoice = async invoiceId => {\n  return await api.getInvoice(invoiceId);\n}; // Initialize the app\n\n\nexport default function App(_ref) {\n  _s();\n\n  let {\n    apikey,\n    handle,\n    amount = 1,\n    theme = THEME_DEFAULT\n  } = _ref;\n  api.init(PARTNER_API_URL, apikey);\n  const [profile, setProfile] = useState(null);\n  const [invoice, setInvoice] = useState(null);\n  const [quote, setQuote] = useState(null);\n  const [isFetchingInvoice, setIsFetchingInvoice] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClose = () => {\n    setQuote(null);\n    setAnchorEl(null);\n  }; //\n  // Button click handler\n  //\n\n\n  const handleButtonClick = async (event, amount) => {\n    setAnchorEl(event.currentTarget);\n    setIsFetchingInvoice(true);\n    var updatedInvoice = invoice;\n\n    if (!updatedInvoice) {\n      updatedInvoice = await createInvoice(handle, amount, profile.currencies.find(c => c.isDefaultCurrency).currency);\n      setInvoice(updatedInvoice);\n    }\n\n    const updatedQuote = await createQuote(updatedInvoice.invoiceId);\n    setQuote(updatedQuote);\n    setIsFetchingInvoice(false);\n  }; //\n  // Widget Initialisation\n  //\n\n\n  useEffect(async () => {\n    var profile = await api.getProfile(handle);\n    setProfile(profile);\n  }, []); //\n  // Invoice interactions.\n  //\n\n  useEffect(() => {\n    if (quote === null) {\n      return;\n    }\n\n    var successTimeoutId;\n    const refreshTimerId = setTimeout(async () => {\n      const updatedInvoice = await getInvoice(invoice.invoiceId);\n      setInvoice(updatedInvoice);\n\n      if (updatedInvoice.state !== INVOICE_STATE_UNPAID) {\n        setQuote(null);\n        successTimeoutId = setTimeout(() => {\n          setInvoice(null);\n        }, 3000);\n      }\n\n      if (new Date(quote.expiration) < new Date()) {\n        setQuote(null);\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(refreshTimerId);\n      clearTimeout(successTimeoutId);\n    };\n  }, [invoice, quote]);\n  const isUnpaid = (invoice === null || invoice === void 0 ? void 0 : invoice.state) === INVOICE_STATE_UNPAID && quote !== null;\n  const isPaid = (invoice === null || invoice === void 0 ? void 0 : invoice.state) === INVOICE_STATE_PAID;\n\n  if (!profile) {\n    return null;\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: e => handleButtonClick(e, amount),\n      fullWidth: true,\n      children: [isFetchingInvoice && /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 31\n      }, this), isPaid ? \"Thank You!\" : `Tip ${handle} ${amount} ${getDefaultCurrency(profile)}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      open: isUnpaid,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: isUnpaid && /*#__PURE__*/_jsxDEV(Invoice, {\n        quote: quote,\n        size: 250,\n        m: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vSBNMXrXfKz1jj4dP04ZZDWaV6M=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/src/App.js"],"names":["React","useState","useEffect","Button","CircularProgress","Popover","Invoice","api","INVOICE_STATE_UNPAID","INVOICE_STATE_PAID","PARTNER_API_URL","THEME_DEFAULT","THEME_NONE","getDefaultCurrency","profile","currencies","find","c","isDefaultCurrency","currency","createInvoice","handle","amount","createQuote","invoiceId","getInvoice","App","apikey","theme","init","setProfile","invoice","setInvoice","quote","setQuote","isFetchingInvoice","setIsFetchingInvoice","anchorEl","setAnchorEl","handleClose","handleButtonClick","event","currentTarget","updatedInvoice","updatedQuote","getProfile","successTimeoutId","refreshTimerId","setTimeout","state","Date","expiration","clearTimeout","isUnpaid","isPaid","e","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, CircularProgress, Popover } from '@mui/material';\nimport { Invoice } from './components'\n\nimport { api, INVOICE_STATE_UNPAID, INVOICE_STATE_PAID } from './lib/api.js'\n\nconst PARTNER_API_URL = \"https://api.next.strike.me/v1/\";\nconst THEME_DEFAULT = 'default';\nconst THEME_NONE = 'none';\n\nconst getDefaultCurrency = profile => {\n  return profile.currencies.find(c => c.isDefaultCurrency).currency;\n}\n\nconst createInvoice = async (handle, amount, currency) => {\n  return await api.createInvoice(handle, amount, currency);\n};\n\nconst createQuote = async invoiceId => {\n  return await api.createQuote(invoiceId);\n};\n\nconst getInvoice = async invoiceId => {\n  return await api.getInvoice(invoiceId);\n};\n\n// Initialize the app\nexport default function App({ apikey, handle, amount = 1, theme = THEME_DEFAULT }) {\n  api.init(PARTNER_API_URL, apikey);\n\n  const [profile, setProfile] = useState(null);\n  const [invoice, setInvoice] = useState(null);\n  const [quote, setQuote] = useState(null);\n  const [isFetchingInvoice, setIsFetchingInvoice] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClose = () => {\n    setQuote(null);\n    setAnchorEl(null);\n  };\n\n  //\n  // Button click handler\n  //\n  const handleButtonClick = async (event, amount) => {\n    setAnchorEl(event.currentTarget);\n    setIsFetchingInvoice(true);\n\n    var updatedInvoice = invoice;\n    if (!updatedInvoice) {\n      updatedInvoice = await createInvoice(handle, amount, profile.currencies.find(c => c.isDefaultCurrency).currency);\n      setInvoice(updatedInvoice);\n    }\n\n    const updatedQuote = await createQuote(updatedInvoice.invoiceId);\n    setQuote(updatedQuote)\n\n    setIsFetchingInvoice(false);\n  };\n\n  //\n  // Widget Initialisation\n  //\n  useEffect(async () => {\n    var profile = await api.getProfile(handle)\n    setProfile(profile);\n  }, []);\n\n\n  //\n  // Invoice interactions.\n  //\n  useEffect(() => {\n    if (quote === null) {\n      return;\n    }\n\n    var successTimeoutId;\n    const refreshTimerId = setTimeout(async () => {\n      const updatedInvoice = await getInvoice(invoice.invoiceId);\n      setInvoice(updatedInvoice);\n\n      if (updatedInvoice.state !== INVOICE_STATE_UNPAID) {\n        setQuote(null);\n        successTimeoutId = setTimeout(() => { setInvoice(null); }, 3000);\n      }\n\n      if (new Date(quote.expiration) < new Date()) {\n        setQuote(null);\n      }\n    }, 1000);\n\n    return () => {\n      clearTimeout(refreshTimerId);\n      clearTimeout(successTimeoutId);\n    }\n  }, [invoice, quote]);\n\n  const isUnpaid = invoice?.state === INVOICE_STATE_UNPAID && quote !== null;\n  const isPaid = invoice?.state === INVOICE_STATE_PAID;\n\n  if (!profile) {\n    return null\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" onClick={e => handleButtonClick(e, amount)} fullWidth>\n        {isFetchingInvoice && <CircularProgress size={24} />}\n        {isPaid ? \"Thank You!\" : `Tip ${handle} ${amount} ${getDefaultCurrency(profile)}`}\n      </Button>\n\n      <Popover\n        open={isUnpaid}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}>\n          {isUnpaid && <Invoice quote={quote} size={250} m={2} />}\n      </Popover>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}