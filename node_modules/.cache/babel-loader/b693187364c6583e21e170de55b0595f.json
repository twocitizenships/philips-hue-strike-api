{"ast":null,"code":"import { BooleanType, ChoiceType, Int8Type, ObjectType, StringType } from '../../types';\nimport { BridgeObjectWithId } from '../BridgeObjectWithId';\nconst ATTRIBUTES = [new StringType({\n  name: 'id',\n  minLength: 1,\n  maxLength: 16\n}), new StringType({\n  name: 'name',\n  minLength: 1,\n  maxLength: 32\n}), new ChoiceType({\n  name: 'type',\n  validValues: ['LightScene', 'GroupScene'],\n  defaultValue: 'LightScene'\n}), new StringType({\n  name: 'owner'\n}), new BooleanType({\n  name: 'recycle',\n  defaultValue: false\n}), new BooleanType({\n  name: 'locked'\n}), new ObjectType({\n  name: 'appdata',\n  types: [new Int8Type({\n    name: 'version'\n  }), new StringType({\n    name: 'data',\n    minLength: 1,\n    maxLength: 16,\n    optional: true\n  })]\n}), new StringType({\n  name: 'picture',\n  minLength: 0,\n  maxLength: 16\n}), new StringType({\n  name: 'lastupdated'\n}), new Int8Type({\n  name: 'version'\n})];\nexport class Scene extends BridgeObjectWithId {\n  constructor(attributes, type, id) {\n    super([...ATTRIBUTES, ...attributes], id);\n    this.setAttributeValue('type', type);\n  }\n\n  get name() {\n    return this.getAttributeValue('name');\n  }\n\n  set name(value) {\n    this.setAttributeValue('name', value);\n  }\n\n  get type() {\n    return this.getAttributeValue('type');\n  }\n\n  get owner() {\n    return this.getAttributeValue('owner');\n  }\n\n  get recycle() {\n    return this.getAttributeValue('recycle');\n  }\n\n  set recycle(value) {\n    this.setAttributeValue('recycle', value);\n  }\n\n  get locked() {\n    return this.getAttributeValue('locked');\n  }\n\n  get appdata() {\n    return this.getAttributeValue('appdata');\n  }\n\n  set appdata(value) {\n    this.setAttributeValue('appdata', value);\n  }\n\n  set picture(value) {\n    this.setAttributeValue('picture', value);\n  }\n\n  get picture() {\n    return this.getAttributeValue('picture');\n  }\n\n  get lastupdated() {\n    return this.getAttributeValue('lastupdated');\n  }\n\n  get version() {\n    return this.getAttributeValue('version');\n  }\n\n}","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/@peter-murray/hue-bridge-model/dist/esm/model/scenes/Scene.js"],"names":["BooleanType","ChoiceType","Int8Type","ObjectType","StringType","BridgeObjectWithId","ATTRIBUTES","name","minLength","maxLength","validValues","defaultValue","types","optional","Scene","constructor","attributes","type","id","setAttributeValue","getAttributeValue","value","owner","recycle","locked","appdata","picture","lastupdated","version"],"mappings":"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","sourcesContent":["import { BooleanType, ChoiceType, Int8Type, ObjectType, StringType } from '../../types';\nimport { BridgeObjectWithId } from '../BridgeObjectWithId';\nconst ATTRIBUTES = [\n    new StringType({ name: 'id', minLength: 1, maxLength: 16 }),\n    new StringType({ name: 'name', minLength: 1, maxLength: 32 }),\n    new ChoiceType({ name: 'type', validValues: ['LightScene', 'GroupScene'], defaultValue: 'LightScene' }),\n    new StringType({ name: 'owner' }),\n    new BooleanType({ name: 'recycle', defaultValue: false }),\n    new BooleanType({ name: 'locked' }),\n    new ObjectType({ name: 'appdata', types: [new Int8Type({ name: 'version' }), new StringType({ name: 'data', minLength: 1, maxLength: 16, optional: true })] }),\n    new StringType({ name: 'picture', minLength: 0, maxLength: 16 }),\n    new StringType({ name: 'lastupdated' }),\n    new Int8Type({ name: 'version' }),\n];\nexport class Scene extends BridgeObjectWithId {\n    constructor(attributes, type, id) {\n        super([...ATTRIBUTES, ...attributes], id);\n        this.setAttributeValue('type', type);\n    }\n    get name() {\n        return this.getAttributeValue('name');\n    }\n    set name(value) {\n        this.setAttributeValue('name', value);\n    }\n    get type() {\n        return this.getAttributeValue('type');\n    }\n    get owner() {\n        return this.getAttributeValue('owner');\n    }\n    get recycle() {\n        return this.getAttributeValue('recycle');\n    }\n    set recycle(value) {\n        this.setAttributeValue('recycle', value);\n    }\n    get locked() {\n        return this.getAttributeValue('locked');\n    }\n    get appdata() {\n        return this.getAttributeValue('appdata');\n    }\n    set appdata(value) {\n        this.setAttributeValue('appdata', value);\n    }\n    set picture(value) {\n        this.setAttributeValue('picture', value);\n    }\n    get picture() {\n        return this.getAttributeValue('picture');\n    }\n    get lastupdated() {\n        return this.getAttributeValue('lastupdated');\n    }\n    get version() {\n        return this.getAttributeValue('version');\n    }\n}\n"]},"metadata":{},"sourceType":"module"}