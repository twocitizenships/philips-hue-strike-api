{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.description = exports.nupnpSearch = exports.upnpSearch = void 0;\n\nconst bridgeValidator = __importStar(require(\"./bridge-validation\"));\n\nconst nupnp_1 = require(\"./nupnp\");\n\nconst UPnP_1 = require(\"./UPnP\");\n\nfunction upnpSearch(timeout) {\n  const upnp = new UPnP_1.SSDPSearch();\n  return upnp.search(timeout).then(loadDescriptions);\n}\n\nexports.upnpSearch = upnpSearch;\n\nfunction nupnpSearch() {\n  return (0, nupnp_1.nupnp)().then(loadConfigurations);\n}\n\nexports.nupnpSearch = nupnpSearch;\n\nfunction description(ipAddress) {\n  if (!ipAddress) {\n    return Promise.resolve(undefined);\n  }\n\n  return loadDescriptions([{\n    internalipaddress: ipAddress\n  }]).then(results => {\n    return results[0];\n  });\n}\n\nexports.description = description;\n\nfunction loadDescriptions(results) {\n  const promises = results.map(result => {\n    return bridgeValidator.getBridgeDescription(result);\n  });\n  return Promise.all(promises);\n}\n\nfunction loadConfigurations(results) {\n  const promises = results.map(result => {\n    return bridgeValidator.getBridgeConfig(result).then(config => {\n      return {\n        ipaddress: config.ipaddress,\n        config: config\n      };\n    }).catch(err => {\n      const error = {\n        error: {\n          message: err.message,\n          description: `Failed to connect and load configuration from the bridge at ip address ${result.internalipaddress}`,\n          ipaddress: result.internalipaddress,\n          id: result.id\n        }\n      };\n      return {\n        ipaddress: result.internalipaddress,\n        error: error\n      };\n    });\n  });\n  return Promise.all(promises);\n}","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/node-hue-api/dist/cjs/api/discovery/index.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","description","nupnpSearch","upnpSearch","bridgeValidator","require","nupnp_1","UPnP_1","timeout","upnp","SSDPSearch","search","then","loadDescriptions","nupnp","loadConfigurations","ipAddress","Promise","resolve","internalipaddress","results","promises","map","getBridgeDescription","all","getBridgeConfig","config","ipaddress","catch","err","error","message","id"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.description = exports.nupnpSearch = exports.upnpSearch = void 0;\nconst bridgeValidator = __importStar(require(\"./bridge-validation\"));\nconst nupnp_1 = require(\"./nupnp\");\nconst UPnP_1 = require(\"./UPnP\");\nfunction upnpSearch(timeout) {\n    const upnp = new UPnP_1.SSDPSearch();\n    return upnp.search(timeout).then(loadDescriptions);\n}\nexports.upnpSearch = upnpSearch;\nfunction nupnpSearch() {\n    return (0, nupnp_1.nupnp)().then(loadConfigurations);\n}\nexports.nupnpSearch = nupnpSearch;\nfunction description(ipAddress) {\n    if (!ipAddress) {\n        return Promise.resolve(undefined);\n    }\n    return loadDescriptions([{ internalipaddress: ipAddress }])\n        .then((results) => {\n        return results[0];\n    });\n}\nexports.description = description;\nfunction loadDescriptions(results) {\n    const promises = results.map(result => {\n        return bridgeValidator.getBridgeDescription(result);\n    });\n    return Promise.all(promises);\n}\nfunction loadConfigurations(results) {\n    const promises = results.map(result => {\n        return bridgeValidator\n            .getBridgeConfig(result)\n            .then(config => {\n            return {\n                ipaddress: config.ipaddress,\n                config: config\n            };\n        })\n            .catch(err => {\n            const error = {\n                error: {\n                    message: err.message,\n                    description: `Failed to connect and load configuration from the bridge at ip address ${result.internalipaddress}`,\n                    ipaddress: result.internalipaddress,\n                    id: result.id,\n                }\n            };\n            return {\n                ipaddress: result.internalipaddress,\n                error: error\n            };\n        });\n    });\n    return Promise.all(promises);\n}\n"]},"metadata":{},"sourceType":"script"}