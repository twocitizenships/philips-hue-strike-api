{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HueError = exports.ERROR_TYPES = void 0; //TODO create wrapper types\n\nexports.ERROR_TYPES = {\n  1: 'unauthorized user',\n  2: 'body contains invalid JSON',\n  3: 'resource not found',\n  4: 'method not available for resource',\n  5: 'missing parameters in body',\n  6: 'parameter not available',\n  7: 'invalid value for parameter',\n  8: 'parameter not modifiable',\n  11: 'too many items in list',\n  12: 'portal connection is required',\n  901: 'bridge internal error'\n};\n\nclass HueError {\n  constructor(payload) {\n    this.payload = payload;\n  }\n\n  get type() {\n    return this.payload.type || -1;\n  }\n\n  get address() {\n    return this.payload.address;\n  }\n\n  get description() {\n    return this.payload.description;\n  }\n\n  get message() {\n    let str = this.payload.message,\n        type = this.type;\n\n    if (type === 5 || type === 6) {\n      // The address makes the error more meaningful\n      str = `${str}: ${this.address}`;\n    }\n\n    return str;\n  }\n\n  get rawError() {\n    return this.payload;\n  }\n\n}\n\nexports.HueError = HueError;","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/node-hue-api/dist/cjs/HueError.js"],"names":["Object","defineProperty","exports","value","HueError","ERROR_TYPES","constructor","payload","type","address","description","message","str","rawError"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmBF,OAAO,CAACG,WAAR,GAAsB,KAAK,CAA9C,C,CACA;;AACAH,OAAO,CAACG,WAAR,GAAsB;AAClB,KAAG,mBADe;AAElB,KAAG,4BAFe;AAGlB,KAAG,oBAHe;AAIlB,KAAG,mCAJe;AAKlB,KAAG,4BALe;AAMlB,KAAG,yBANe;AAOlB,KAAG,6BAPe;AAQlB,KAAG,0BARe;AASlB,MAAI,wBATc;AAUlB,MAAI,+BAVc;AAWlB,OAAK;AAXa,CAAtB;;AAaA,MAAMD,QAAN,CAAe;AACXE,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACH;;AACO,MAAJC,IAAI,GAAG;AACP,WAAO,KAAKD,OAAL,CAAaC,IAAb,IAAqB,CAAC,CAA7B;AACH;;AACU,MAAPC,OAAO,GAAG;AACV,WAAO,KAAKF,OAAL,CAAaE,OAApB;AACH;;AACc,MAAXC,WAAW,GAAG;AACd,WAAO,KAAKH,OAAL,CAAaG,WAApB;AACH;;AACU,MAAPC,OAAO,GAAG;AACV,QAAIC,GAAG,GAAG,KAAKL,OAAL,CAAaI,OAAvB;AAAA,QAAgCH,IAAI,GAAG,KAAKA,IAA5C;;AACA,QAAIA,IAAI,KAAK,CAAT,IAAcA,IAAI,KAAK,CAA3B,EAA8B;AAC1B;AACAI,MAAAA,GAAG,GAAI,GAAEA,GAAI,KAAI,KAAKH,OAAQ,EAA9B;AACH;;AACD,WAAOG,GAAP;AACH;;AACW,MAARC,QAAQ,GAAG;AACX,WAAO,KAAKN,OAAZ;AACH;;AAvBU;;AAyBfL,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HueError = exports.ERROR_TYPES = void 0;\n//TODO create wrapper types\nexports.ERROR_TYPES = {\n    1: 'unauthorized user',\n    2: 'body contains invalid JSON',\n    3: 'resource not found',\n    4: 'method not available for resource',\n    5: 'missing parameters in body',\n    6: 'parameter not available',\n    7: 'invalid value for parameter',\n    8: 'parameter not modifiable',\n    11: 'too many items in list',\n    12: 'portal connection is required',\n    901: 'bridge internal error',\n};\nclass HueError {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    get type() {\n        return this.payload.type || -1;\n    }\n    get address() {\n        return this.payload.address;\n    }\n    get description() {\n        return this.payload.description;\n    }\n    get message() {\n        let str = this.payload.message, type = this.type;\n        if (type === 5 || type === 6) {\n            // The address makes the error more meaningful\n            str = `${str}: ${this.address}`;\n        }\n        return str;\n    }\n    get rawError() {\n        return this.payload;\n    }\n}\nexports.HueError = HueError;\n"]},"metadata":{},"sourceType":"script"}