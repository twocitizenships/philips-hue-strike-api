{"ast":null,"code":"\"use strict\";\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar Events, Group, IORedisConnection, RedisConnection, Scripts, parser;\nparser = require(\"./parser\");\nEvents = require(\"./Events\");\nRedisConnection = require(\"./RedisConnection\");\nIORedisConnection = require(\"./IORedisConnection\");\nScripts = require(\"./Scripts\");\n\nGroup = function () {\n  class Group {\n    constructor() {\n      let limiterOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.deleteKey = this.deleteKey.bind(this);\n      this.limiterOptions = limiterOptions;\n      parser.load(this.limiterOptions, this.defaults, this);\n      this.Events = new Events(this);\n      this.instances = {};\n      this.Bottleneck = require(\"./Bottleneck\");\n\n      this._startAutoCleanup();\n\n      this.sharedConnection = this.connection != null;\n\n      if (this.connection == null) {\n        if (this.limiterOptions.datastore === \"redis\") {\n          this.connection = new RedisConnection(Object.assign({}, this.limiterOptions, {\n            Events: this.Events\n          }));\n        } else if (this.limiterOptions.datastore === \"ioredis\") {\n          this.connection = new IORedisConnection(Object.assign({}, this.limiterOptions, {\n            Events: this.Events\n          }));\n        }\n      }\n    }\n\n    key() {\n      let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var ref;\n      return (ref = this.instances[key]) != null ? ref : (() => {\n        var limiter;\n        limiter = this.instances[key] = new this.Bottleneck(Object.assign(this.limiterOptions, {\n          id: `${this.id}-${key}`,\n          timeout: this.timeout,\n          connection: this.connection\n        }));\n        this.Events.trigger(\"created\", limiter, key);\n        return limiter;\n      })();\n    }\n\n    deleteKey() {\n      let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var deleted, instance;\n        instance = _this.instances[key];\n\n        if (_this.connection) {\n          deleted = yield _this.connection.__runCommand__(['del', ...Scripts.allKeys(`${_this.id}-${key}`)]);\n        }\n\n        if (instance != null) {\n          delete _this.instances[key];\n          yield instance.disconnect();\n        }\n\n        return instance != null || deleted > 0;\n      })();\n    }\n\n    limiters() {\n      var k, ref, results, v;\n      ref = this.instances;\n      results = [];\n\n      for (k in ref) {\n        v = ref[k];\n        results.push({\n          key: k,\n          limiter: v\n        });\n      }\n\n      return results;\n    }\n\n    keys() {\n      return Object.keys(this.instances);\n    }\n\n    clusterKeys() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        var cursor, end, found, i, k, keys, len, next, start;\n\n        if (_this2.connection == null) {\n          return _this2.Promise.resolve(_this2.keys());\n        }\n\n        keys = [];\n        cursor = null;\n        start = `b_${_this2.id}-`.length;\n        end = \"_settings\".length;\n\n        while (cursor !== 0) {\n          var _ref = yield _this2.connection.__runCommand__([\"scan\", cursor != null ? cursor : 0, \"match\", `b_${_this2.id}-*_settings`, \"count\", 10000]);\n\n          var _ref2 = _slicedToArray(_ref, 2);\n\n          next = _ref2[0];\n          found = _ref2[1];\n          cursor = ~~next;\n\n          for (i = 0, len = found.length; i < len; i++) {\n            k = found[i];\n            keys.push(k.slice(start, -end));\n          }\n        }\n\n        return keys;\n      })();\n    }\n\n    _startAutoCleanup() {\n      var _this3 = this;\n\n      var base;\n      clearInterval(this.interval);\n      return typeof (base = this.interval = setInterval( /*#__PURE__*/_asyncToGenerator(function* () {\n        var e, k, ref, results, time, v;\n        time = Date.now();\n        ref = _this3.instances;\n        results = [];\n\n        for (k in ref) {\n          v = ref[k];\n\n          try {\n            if (yield v._store.__groupCheck__(time)) {\n              results.push(_this3.deleteKey(k));\n            } else {\n              results.push(void 0);\n            }\n          } catch (error) {\n            e = error;\n            results.push(v.Events.trigger(\"error\", e));\n          }\n        }\n\n        return results;\n      }), this.timeout / 2)).unref === \"function\" ? base.unref() : void 0;\n    }\n\n    updateSettings() {\n      let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      parser.overwrite(options, this.defaults, this);\n      parser.overwrite(options, options, this.limiterOptions);\n\n      if (options.timeout != null) {\n        return this._startAutoCleanup();\n      }\n    }\n\n    disconnect() {\n      let flush = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var ref;\n\n      if (!this.sharedConnection) {\n        return (ref = this.connection) != null ? ref.disconnect(flush) : void 0;\n      }\n    }\n\n  }\n\n  ;\n  Group.prototype.defaults = {\n    timeout: 1000 * 60 * 5,\n    connection: null,\n    Promise: Promise,\n    id: \"group-key\"\n  };\n  return Group;\n}.call(void 0);\n\nmodule.exports = Group;","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/bottleneck/lib/Group.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","Events","Group","IORedisConnection","RedisConnection","Scripts","parser","require","constructor","limiterOptions","deleteKey","bind","load","defaults","instances","Bottleneck","_startAutoCleanup","sharedConnection","connection","datastore","Object","assign","ref","limiter","id","timeout","trigger","_this","deleted","instance","__runCommand__","allKeys","disconnect","limiters","k","results","v","keys","clusterKeys","_this2","cursor","end","found","len","start","_ref","_ref2","slice","_this3","base","clearInterval","interval","setInterval","e","time","Date","now","_store","__groupCheck__","unref","updateSettings","options","overwrite","flush","prototype","call","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Events, Group, IORedisConnection, RedisConnection, Scripts, parser;\nparser = require(\"./parser\");\nEvents = require(\"./Events\");\nRedisConnection = require(\"./RedisConnection\");\nIORedisConnection = require(\"./IORedisConnection\");\nScripts = require(\"./Scripts\");\n\nGroup = function () {\n  class Group {\n    constructor(limiterOptions = {}) {\n      this.deleteKey = this.deleteKey.bind(this);\n      this.limiterOptions = limiterOptions;\n      parser.load(this.limiterOptions, this.defaults, this);\n      this.Events = new Events(this);\n      this.instances = {};\n      this.Bottleneck = require(\"./Bottleneck\");\n\n      this._startAutoCleanup();\n\n      this.sharedConnection = this.connection != null;\n\n      if (this.connection == null) {\n        if (this.limiterOptions.datastore === \"redis\") {\n          this.connection = new RedisConnection(Object.assign({}, this.limiterOptions, {\n            Events: this.Events\n          }));\n        } else if (this.limiterOptions.datastore === \"ioredis\") {\n          this.connection = new IORedisConnection(Object.assign({}, this.limiterOptions, {\n            Events: this.Events\n          }));\n        }\n      }\n    }\n\n    key(key = \"\") {\n      var ref;\n      return (ref = this.instances[key]) != null ? ref : (() => {\n        var limiter;\n        limiter = this.instances[key] = new this.Bottleneck(Object.assign(this.limiterOptions, {\n          id: `${this.id}-${key}`,\n          timeout: this.timeout,\n          connection: this.connection\n        }));\n        this.Events.trigger(\"created\", limiter, key);\n        return limiter;\n      })();\n    }\n\n    deleteKey(key = \"\") {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var deleted, instance;\n        instance = _this.instances[key];\n\n        if (_this.connection) {\n          deleted = yield _this.connection.__runCommand__(['del', ...Scripts.allKeys(`${_this.id}-${key}`)]);\n        }\n\n        if (instance != null) {\n          delete _this.instances[key];\n          yield instance.disconnect();\n        }\n\n        return instance != null || deleted > 0;\n      })();\n    }\n\n    limiters() {\n      var k, ref, results, v;\n      ref = this.instances;\n      results = [];\n\n      for (k in ref) {\n        v = ref[k];\n        results.push({\n          key: k,\n          limiter: v\n        });\n      }\n\n      return results;\n    }\n\n    keys() {\n      return Object.keys(this.instances);\n    }\n\n    clusterKeys() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        var cursor, end, found, i, k, keys, len, next, start;\n\n        if (_this2.connection == null) {\n          return _this2.Promise.resolve(_this2.keys());\n        }\n\n        keys = [];\n        cursor = null;\n        start = `b_${_this2.id}-`.length;\n        end = \"_settings\".length;\n\n        while (cursor !== 0) {\n          var _ref = yield _this2.connection.__runCommand__([\"scan\", cursor != null ? cursor : 0, \"match\", `b_${_this2.id}-*_settings`, \"count\", 10000]);\n\n          var _ref2 = _slicedToArray(_ref, 2);\n\n          next = _ref2[0];\n          found = _ref2[1];\n          cursor = ~~next;\n\n          for (i = 0, len = found.length; i < len; i++) {\n            k = found[i];\n            keys.push(k.slice(start, -end));\n          }\n        }\n\n        return keys;\n      })();\n    }\n\n    _startAutoCleanup() {\n      var _this3 = this;\n\n      var base;\n      clearInterval(this.interval);\n      return typeof (base = this.interval = setInterval(\n      /*#__PURE__*/\n      _asyncToGenerator(function* () {\n        var e, k, ref, results, time, v;\n        time = Date.now();\n        ref = _this3.instances;\n        results = [];\n\n        for (k in ref) {\n          v = ref[k];\n\n          try {\n            if (yield v._store.__groupCheck__(time)) {\n              results.push(_this3.deleteKey(k));\n            } else {\n              results.push(void 0);\n            }\n          } catch (error) {\n            e = error;\n            results.push(v.Events.trigger(\"error\", e));\n          }\n        }\n\n        return results;\n      }), this.timeout / 2)).unref === \"function\" ? base.unref() : void 0;\n    }\n\n    updateSettings(options = {}) {\n      parser.overwrite(options, this.defaults, this);\n      parser.overwrite(options, options, this.limiterOptions);\n\n      if (options.timeout != null) {\n        return this._startAutoCleanup();\n      }\n    }\n\n    disconnect(flush = true) {\n      var ref;\n\n      if (!this.sharedConnection) {\n        return (ref = this.connection) != null ? ref.disconnect(flush) : void 0;\n      }\n    }\n\n  }\n\n  ;\n  Group.prototype.defaults = {\n    timeout: 1000 * 60 * 5,\n    connection: null,\n    Promise: Promise,\n    id: \"group-key\"\n  };\n  return Group;\n}.call(void 0);\n\nmodule.exports = Group;"]},"metadata":{},"sourceType":"script"}