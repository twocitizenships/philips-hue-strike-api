{"ast":null,"code":"import { Sensor } from './Sensor';\nimport { BooleanType, Int8Type, StringType } from '../../types';\nconst CONFIG_ATTRIBUTES = [new BooleanType({\n  name: 'configured'\n}), new Int8Type({\n  name: 'sunriseoffset',\n  defaultValue: 30,\n  min: -120,\n  max: 120\n}), new Int8Type({\n  name: 'sunsetoffset',\n  defaultValue: -30,\n  min: -120,\n  max: 120\n}), new StringType({\n  name: 'long'\n}), new StringType({\n  name: 'lat'\n}) //TODO Can only set this\n],\n      STATE_ATTRIBUTES = [new BooleanType({\n  name: 'daylight'\n}), new StringType({\n  name: 'lastupdated'\n})];\nexport class Daylight extends Sensor {\n  constructor(id) {\n    super(CONFIG_ATTRIBUTES, STATE_ATTRIBUTES, id);\n  }\n\n  set long(value) {\n    this._updateConfigAttributeValue('long', value);\n  }\n\n  set lat(value) {\n    this._updateConfigAttributeValue('lat', value);\n  }\n\n  get configured() {\n    return this.getConfigAttributeValue('configured');\n  }\n\n  get sunriseoffset() {\n    return this.getConfigAttributeValue('sunriseoffset');\n  }\n\n  set sunriseoffset(value) {\n    this._updateConfigAttributeValue('sunriseoffset', value);\n  }\n\n  get sunsetoffset() {\n    return this.getConfigAttributeValue('sunsetoffset');\n  }\n\n  set sunsetoffset(value) {\n    this._updateConfigAttributeValue('sunsetoffset', value);\n  }\n\n  get daylight() {\n    return this.getStateAttributeValue('daylight');\n  }\n\n  set daylight(value) {\n    this._updateStateAttributeValue('daylight', !!value);\n  }\n\n}","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/@peter-murray/hue-bridge-model/dist/esm/model/sensors/Daylight.js"],"names":["Sensor","BooleanType","Int8Type","StringType","CONFIG_ATTRIBUTES","name","defaultValue","min","max","STATE_ATTRIBUTES","Daylight","constructor","id","long","value","_updateConfigAttributeValue","lat","configured","getConfigAttributeValue","sunriseoffset","sunsetoffset","daylight","getStateAttributeValue","_updateStateAttributeValue"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,UAAhC,QAAkD,aAAlD;AACA,MAAMC,iBAAiB,GAAG,CACtB,IAAIH,WAAJ,CAAgB;AAAEI,EAAAA,IAAI,EAAE;AAAR,CAAhB,CADsB,EAEtB,IAAIH,QAAJ,CAAa;AAAEG,EAAAA,IAAI,EAAE,eAAR;AAAyBC,EAAAA,YAAY,EAAE,EAAvC;AAA2CC,EAAAA,GAAG,EAAE,CAAC,GAAjD;AAAsDC,EAAAA,GAAG,EAAE;AAA3D,CAAb,CAFsB,EAGtB,IAAIN,QAAJ,CAAa;AAAEG,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,YAAY,EAAE,CAAC,EAAvC;AAA2CC,EAAAA,GAAG,EAAE,CAAC,GAAjD;AAAsDC,EAAAA,GAAG,EAAE;AAA3D,CAAb,CAHsB,EAItB,IAAIL,UAAJ,CAAe;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAf,CAJsB,EAKtB,IAAIF,UAAJ,CAAe;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAf,CALsB,CAKW;AALX,CAA1B;AAAA,MAMGI,gBAAgB,GAAG,CAClB,IAAIR,WAAJ,CAAgB;AAAEI,EAAAA,IAAI,EAAE;AAAR,CAAhB,CADkB,EAElB,IAAIF,UAAJ,CAAe;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAf,CAFkB,CANtB;AAUA,OAAO,MAAMK,QAAN,SAAuBV,MAAvB,CAA8B;AACjCW,EAAAA,WAAW,CAACC,EAAD,EAAK;AACZ,UAAMR,iBAAN,EAAyBK,gBAAzB,EAA2CG,EAA3C;AACH;;AACO,MAAJC,IAAI,CAACC,KAAD,EAAQ;AACZ,SAAKC,2BAAL,CAAiC,MAAjC,EAAyCD,KAAzC;AACH;;AACM,MAAHE,GAAG,CAACF,KAAD,EAAQ;AACX,SAAKC,2BAAL,CAAiC,KAAjC,EAAwCD,KAAxC;AACH;;AACa,MAAVG,UAAU,GAAG;AACb,WAAO,KAAKC,uBAAL,CAA6B,YAA7B,CAAP;AACH;;AACgB,MAAbC,aAAa,GAAG;AAChB,WAAO,KAAKD,uBAAL,CAA6B,eAA7B,CAAP;AACH;;AACgB,MAAbC,aAAa,CAACL,KAAD,EAAQ;AACrB,SAAKC,2BAAL,CAAiC,eAAjC,EAAkDD,KAAlD;AACH;;AACe,MAAZM,YAAY,GAAG;AACf,WAAO,KAAKF,uBAAL,CAA6B,cAA7B,CAAP;AACH;;AACe,MAAZE,YAAY,CAACN,KAAD,EAAQ;AACpB,SAAKC,2BAAL,CAAiC,cAAjC,EAAiDD,KAAjD;AACH;;AACW,MAARO,QAAQ,GAAG;AACX,WAAO,KAAKC,sBAAL,CAA4B,UAA5B,CAAP;AACH;;AACW,MAARD,QAAQ,CAACP,KAAD,EAAQ;AAChB,SAAKS,0BAAL,CAAgC,UAAhC,EAA4C,CAAC,CAACT,KAA9C;AACH;;AA9BgC","sourcesContent":["import { Sensor } from './Sensor';\nimport { BooleanType, Int8Type, StringType } from '../../types';\nconst CONFIG_ATTRIBUTES = [\n    new BooleanType({ name: 'configured' }),\n    new Int8Type({ name: 'sunriseoffset', defaultValue: 30, min: -120, max: 120 }),\n    new Int8Type({ name: 'sunsetoffset', defaultValue: -30, min: -120, max: 120 }),\n    new StringType({ name: 'long' }),\n    new StringType({ name: 'lat' }), //TODO Can only set this\n], STATE_ATTRIBUTES = [\n    new BooleanType({ name: 'daylight' }),\n    new StringType({ name: 'lastupdated' }),\n];\nexport class Daylight extends Sensor {\n    constructor(id) {\n        super(CONFIG_ATTRIBUTES, STATE_ATTRIBUTES, id);\n    }\n    set long(value) {\n        this._updateConfigAttributeValue('long', value);\n    }\n    set lat(value) {\n        this._updateConfigAttributeValue('lat', value);\n    }\n    get configured() {\n        return this.getConfigAttributeValue('configured');\n    }\n    get sunriseoffset() {\n        return this.getConfigAttributeValue('sunriseoffset');\n    }\n    set sunriseoffset(value) {\n        this._updateConfigAttributeValue('sunriseoffset', value);\n    }\n    get sunsetoffset() {\n        return this.getConfigAttributeValue('sunsetoffset');\n    }\n    set sunsetoffset(value) {\n        this._updateConfigAttributeValue('sunsetoffset', value);\n    }\n    get daylight() {\n        return this.getStateAttributeValue('daylight');\n    }\n    set daylight(value) {\n        this._updateStateAttributeValue('daylight', !!value);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}