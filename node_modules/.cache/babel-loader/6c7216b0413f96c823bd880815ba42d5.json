{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Users = void 0;\n\nconst ApiDefinition_1 = require(\"./http/ApiDefinition\");\n\nconst configuration_1 = require(\"./http/endpoints/configuration\");\n\nclass Users extends ApiDefinition_1.ApiDefinition {\n  constructor(hueApi) {\n    super(hueApi);\n  }\n\n  getAll() {\n    return getAllUsersAsArray(this);\n  }\n\n  getUser(username) {\n    return this.getAll().then(users => {\n      if (users.length > 0) {\n        const filtered = users.filter(user => {\n          return user.username === username;\n        });\n\n        if (filtered) {\n          return filtered[0];\n        }\n      }\n\n      return undefined;\n    });\n  } // /**\n  //  * @deprecated Use getUserByName(username) instead\n  //  * @param username {string}\n  //  */\n  // get(username) {\n  //   util.deprecatedFunction('5.x', 'users.get(username)', 'Use users.getUser(username) instead.');\n  //   return this.getUser(username);\n  // }\n\n\n  getUserByName(appName, deviceName) {\n    let nameToMatch;\n\n    if (deviceName) {\n      nameToMatch = `${appName}#${deviceName}`;\n    } else {\n      nameToMatch = appName;\n    }\n\n    return getAllUsersAsArray(this).then(users => {\n      return users.filter(user => user.name === nameToMatch);\n    });\n  } // /**\n  //  * @deprecated use getUserByName(appName, deviceName) instead.\n  //  * @param appName {string}\n  //  * @param deviceName {string}\n  //  * @returns {Promise<Object[]>}\n  //  */\n  // getByName(appName, deviceName) {\n  //   util.deprecatedFunction('5.x', 'users.getByName(appName, deviceName)', 'Use users.getUserByName(appName, deviceName) instead.');\n  //   return this.getUserByName(appName, deviceName);\n  // }\n\n\n  createUser(appName, deviceName) {\n    return this.hueApi.getCachedState().then(state => {\n      //TODO may need to combine the modelid and API version, but am assuming that all newer bridges are kept up to\n      // date, as do not know the specific version number of the introduction of the generateclientkey parameter.\n      // Default to always reporting an old bridge if we cannot get the state\n      let oldBridge = true;\n\n      if (state) {\n        oldBridge = state.modelid === 'BSB001';\n      }\n\n      return this.execute(configuration_1.configurationApi.createUser, {\n        appName: appName,\n        deviceName: deviceName,\n        generateKey: !oldBridge\n      });\n    });\n  }\n\n  deleteUser(username) {\n    return this.execute(configuration_1.configurationApi.deleteUser, {\n      element: username\n    });\n  }\n\n}\n\nexports.Users = Users;\n\nfunction getAllUsers(api) {\n  return api.execute(configuration_1.configurationApi.getConfiguration).then(config => {\n    return config.whitelist || undefined;\n  });\n}\n\nfunction getAllUsersAsArray(api) {\n  return getAllUsers(api).then(users => {\n    const results = [];\n\n    if (users) {\n      Object.keys(users).forEach(username => {\n        results.push(Object.assign({\n          username: username\n        }, users[username]));\n      });\n    }\n\n    return results;\n  });\n}","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/node-hue-api/dist/cjs/api/Users.js"],"names":["Object","defineProperty","exports","value","Users","ApiDefinition_1","require","configuration_1","ApiDefinition","constructor","hueApi","getAll","getAllUsersAsArray","getUser","username","then","users","length","filtered","filter","user","undefined","getUserByName","appName","deviceName","nameToMatch","name","createUser","getCachedState","state","oldBridge","modelid","execute","configurationApi","generateKey","deleteUser","element","getAllUsers","api","getConfiguration","config","whitelist","results","keys","forEach","push","assign"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Users = void 0;\nconst ApiDefinition_1 = require(\"./http/ApiDefinition\");\nconst configuration_1 = require(\"./http/endpoints/configuration\");\nclass Users extends ApiDefinition_1.ApiDefinition {\n    constructor(hueApi) {\n        super(hueApi);\n    }\n    getAll() {\n        return getAllUsersAsArray(this);\n    }\n    getUser(username) {\n        return this.getAll()\n            .then(users => {\n            if (users.length > 0) {\n                const filtered = users.filter(user => {\n                    return user.username === username;\n                });\n                if (filtered) {\n                    return filtered[0];\n                }\n            }\n            return undefined;\n        });\n    }\n    // /**\n    //  * @deprecated Use getUserByName(username) instead\n    //  * @param username {string}\n    //  */\n    // get(username) {\n    //   util.deprecatedFunction('5.x', 'users.get(username)', 'Use users.getUser(username) instead.');\n    //   return this.getUser(username);\n    // }\n    getUserByName(appName, deviceName) {\n        let nameToMatch;\n        if (deviceName) {\n            nameToMatch = `${appName}#${deviceName}`;\n        }\n        else {\n            nameToMatch = appName;\n        }\n        return getAllUsersAsArray(this)\n            .then(users => {\n            return users.filter(user => user.name === nameToMatch);\n        });\n    }\n    // /**\n    //  * @deprecated use getUserByName(appName, deviceName) instead.\n    //  * @param appName {string}\n    //  * @param deviceName {string}\n    //  * @returns {Promise<Object[]>}\n    //  */\n    // getByName(appName, deviceName) {\n    //   util.deprecatedFunction('5.x', 'users.getByName(appName, deviceName)', 'Use users.getUserByName(appName, deviceName) instead.');\n    //   return this.getUserByName(appName, deviceName);\n    // }\n    createUser(appName, deviceName) {\n        return this.hueApi.getCachedState()\n            .then((state) => {\n            //TODO may need to combine the modelid and API version, but am assuming that all newer bridges are kept up to\n            // date, as do not know the specific version number of the introduction of the generateclientkey parameter.\n            // Default to always reporting an old bridge if we cannot get the state\n            let oldBridge = true;\n            if (state) {\n                oldBridge = state.modelid === 'BSB001';\n            }\n            return this.execute(configuration_1.configurationApi.createUser, {\n                appName: appName,\n                deviceName: deviceName,\n                generateKey: !oldBridge\n            });\n        });\n    }\n    deleteUser(username) {\n        return this.execute(configuration_1.configurationApi.deleteUser, { element: username });\n    }\n}\nexports.Users = Users;\nfunction getAllUsers(api) {\n    return api.execute(configuration_1.configurationApi.getConfiguration)\n        .then((config) => {\n        return config.whitelist || undefined;\n    });\n}\nfunction getAllUsersAsArray(api) {\n    return getAllUsers(api)\n        .then((users) => {\n        const results = [];\n        if (users) {\n            Object.keys(users).forEach(username => {\n                results.push(Object.assign({ username: username }, users[username]));\n            });\n        }\n        return results;\n    });\n}\n"]},"metadata":{},"sourceType":"script"}