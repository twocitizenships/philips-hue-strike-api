{"ast":null,"code":"export class RuleConditionOperator {\n  constructor(name, matchValues) {\n    this.type = name;\n    this._matchValues = [name];\n\n    if (matchValues) {\n      this._matchValues = this._matchValues.concat(matchValues);\n    }\n  }\n\n  matches(value) {\n    let matched = false;\n\n    if (value instanceof RuleConditionOperator) {\n      return this.type === value.type;\n    } else {\n      this._matchValues.some(match => {\n        if (match === value) {\n          matched = true;\n          return true;\n        }\n      });\n    }\n\n    return matched;\n  }\n\n  get payload() {\n    return this.type;\n  }\n\n}","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/@peter-murray/hue-bridge-model/dist/esm/model/rules/conditions/RuleConditionOperator.js"],"names":["RuleConditionOperator","constructor","name","matchValues","type","_matchValues","concat","matches","value","matched","some","match","payload"],"mappings":"AAAA,OAAO,MAAMA,qBAAN,CAA4B;AAC/BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,EAAoB;AAC3B,SAAKC,IAAL,GAAYF,IAAZ;AACA,SAAKG,YAAL,GAAoB,CAACH,IAAD,CAApB;;AACA,QAAIC,WAAJ,EAAiB;AACb,WAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,MAAlB,CAAyBH,WAAzB,CAApB;AACH;AACJ;;AACDI,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACX,QAAIC,OAAO,GAAG,KAAd;;AACA,QAAID,KAAK,YAAYR,qBAArB,EAA4C;AACxC,aAAO,KAAKI,IAAL,KAAcI,KAAK,CAACJ,IAA3B;AACH,KAFD,MAGK;AACD,WAAKC,YAAL,CAAkBK,IAAlB,CAAuBC,KAAK,IAAI;AAC5B,YAAIA,KAAK,KAAKH,KAAd,EAAqB;AACjBC,UAAAA,OAAO,GAAG,IAAV;AACA,iBAAO,IAAP;AACH;AACJ,OALD;AAMH;;AACD,WAAOA,OAAP;AACH;;AACU,MAAPG,OAAO,GAAG;AACV,WAAO,KAAKR,IAAZ;AACH;;AAzB8B","sourcesContent":["export class RuleConditionOperator {\n    constructor(name, matchValues) {\n        this.type = name;\n        this._matchValues = [name];\n        if (matchValues) {\n            this._matchValues = this._matchValues.concat(matchValues);\n        }\n    }\n    matches(value) {\n        let matched = false;\n        if (value instanceof RuleConditionOperator) {\n            return this.type === value.type;\n        }\n        else {\n            this._matchValues.some(match => {\n                if (match === value) {\n                    matched = true;\n                    return true;\n                }\n            });\n        }\n        return matched;\n    }\n    get payload() {\n        return this.type;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}