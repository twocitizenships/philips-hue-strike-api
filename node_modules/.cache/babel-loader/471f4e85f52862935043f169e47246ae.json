{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApiEndpoint = void 0;\n\nconst UsernamePlaceholder_1 = require(\"../../placeholders/UsernamePlaceholder\");\n\nconst DEBUG = /node-hue-api/.test(process.env['NODE_DEBUG'] || '');\n\nclass ApiEndpoint {\n  // private _version?: string;\n  constructor() {\n    this._data = {\n      placeholders: [new UsernamePlaceholder_1.UsernamePlaceholder()],\n      headers: {}\n    };\n  }\n\n  placeholder(placeholder) {\n    if (placeholder) {\n      this._getData().placeholders.push(placeholder);\n    }\n\n    return this;\n  } // //TODO what is this being used for now?\n  // version(version: string) {\n  //   this._version = version;\n  //   return this;\n  // }\n\n\n  uri(uri) {\n    this._getData().url = uri;\n    return this;\n  }\n\n  get() {\n    return this.method('GET');\n  }\n\n  post() {\n    return this.method('POST');\n  }\n\n  put() {\n    return this.method('PUT');\n  }\n\n  delete() {\n    return this.method('DELETE');\n  }\n\n  method(method) {\n    this._getData().method = method;\n    return this;\n  }\n\n  acceptJson() {\n    return this.setHeader('Accept', 'application/json');\n  }\n\n  acceptXml() {\n    return this.setHeader('Accept', 'application/xml');\n  }\n\n  pureJson() {\n    this._getData().json = true;\n    return this;\n  }\n\n  postProcess(fn) {\n    this._getData().postProcessing = fn;\n    return this;\n  }\n\n  errorHandler(fn) {\n    this._getData().errorHandler = fn;\n    return this;\n  }\n\n  statusCode(expectedStatusCode) {\n    this._getData().statusCode = expectedStatusCode;\n    return this;\n  }\n\n  setHeader(name, value) {\n    this._getData().headers[name] = value;\n    return this;\n  }\n\n  getRequest(parameters) {\n    const data = this._getData();\n\n    const config = {\n      url: replacePlaceholders(data.url || '', data.placeholders, parameters),\n      method: data.method || 'GET',\n      headers: Object.assign({}, data.headers),\n      json: data.json\n    }; //TODO a number of optional parameters are not necessarily being passed in here - Requires a review\n    //data - done via payloadFn\n    //timeout\n    //params\n    //responseType\n    //baseURL\n\n    if (data._payloadFn) {\n      const payload = data._payloadFn(parameters);\n\n      config.data = payload.body;\n\n      if (payload.type) {\n        if (config.headers) {\n          config.headers['Content-Type'] = payload.type;\n        } else {\n          config.headers = {\n            'Content-Type': payload.type\n          };\n        }\n      }\n    }\n\n    if (DEBUG) {\n      if (data.placeholders) {\n        //TODO redact the username from logs, although it would still appear in the URL...\n        console.log('URL Placeholders:');\n        data.placeholders.forEach(placeholder => {\n          console.log(`  ${placeholder.toString()}`);\n        });\n      }\n\n      if (config.headers) {\n        console.log(`Headers: ${JSON.stringify(config.headers)}`);\n      }\n    }\n\n    if (data.statusCode) {\n      config.validateStatus = function (status) {\n        return status === data.statusCode;\n      };\n    }\n\n    return config;\n  }\n\n  getPostProcessing() {\n    return this._getData().postProcessing;\n  }\n\n  getErrorHandler() {\n    return this._getData().errorHandler;\n  }\n\n  payload(fn) {\n    this._getData()._payloadFn = fn;\n    return this;\n  }\n\n  requiresJsonConversion() {\n    const data = this._getData();\n\n    return data.json || data.headers && data.headers['Accept'] === 'application/json';\n  }\n\n  get successCode() {\n    return this._getData().statusCode || 200;\n  }\n\n  get headers() {\n    return this._getData().headers;\n  }\n\n  _getData() {\n    return this._data;\n  }\n\n}\n\nexports.ApiEndpoint = ApiEndpoint;\n\nfunction replacePlaceholders(url, placeholders, parameters) {\n  let result = url;\n\n  if (placeholders) {\n    placeholders.forEach(function (placeholder) {\n      result = placeholder.inject(result, parameters);\n    });\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/node-hue-api/dist/cjs/api/http/endpoints/ApiEndpoint.js"],"names":["Object","defineProperty","exports","value","ApiEndpoint","UsernamePlaceholder_1","require","DEBUG","test","process","env","constructor","_data","placeholders","UsernamePlaceholder","headers","placeholder","_getData","push","uri","url","get","method","post","put","delete","acceptJson","setHeader","acceptXml","pureJson","json","postProcess","fn","postProcessing","errorHandler","statusCode","expectedStatusCode","name","getRequest","parameters","data","config","replacePlaceholders","assign","_payloadFn","payload","body","type","console","log","forEach","toString","JSON","stringify","validateStatus","status","getPostProcessing","getErrorHandler","requiresJsonConversion","successCode","result","inject"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApiEndpoint = void 0;\nconst UsernamePlaceholder_1 = require(\"../../placeholders/UsernamePlaceholder\");\nconst DEBUG = /node-hue-api/.test(process.env['NODE_DEBUG'] || '');\nclass ApiEndpoint {\n    // private _version?: string;\n    constructor() {\n        this._data = {\n            placeholders: [new UsernamePlaceholder_1.UsernamePlaceholder()],\n            headers: {}\n        };\n    }\n    placeholder(placeholder) {\n        if (placeholder) {\n            this._getData().placeholders.push(placeholder);\n        }\n        return this;\n    }\n    // //TODO what is this being used for now?\n    // version(version: string) {\n    //   this._version = version;\n    //   return this;\n    // }\n    uri(uri) {\n        this._getData().url = uri;\n        return this;\n    }\n    get() {\n        return this.method('GET');\n    }\n    post() {\n        return this.method('POST');\n    }\n    put() {\n        return this.method('PUT');\n    }\n    delete() {\n        return this.method('DELETE');\n    }\n    method(method) {\n        this._getData().method = method;\n        return this;\n    }\n    acceptJson() {\n        return this.setHeader('Accept', 'application/json');\n    }\n    acceptXml() {\n        return this.setHeader('Accept', 'application/xml');\n    }\n    pureJson() {\n        this._getData().json = true;\n        return this;\n    }\n    postProcess(fn) {\n        this._getData().postProcessing = fn;\n        return this;\n    }\n    errorHandler(fn) {\n        this._getData().errorHandler = fn;\n        return this;\n    }\n    statusCode(expectedStatusCode) {\n        this._getData().statusCode = expectedStatusCode;\n        return this;\n    }\n    setHeader(name, value) {\n        this._getData().headers[name] = value;\n        return this;\n    }\n    getRequest(parameters) {\n        const data = this._getData();\n        const config = {\n            url: replacePlaceholders(data.url || '', data.placeholders, parameters),\n            method: data.method || 'GET',\n            headers: Object.assign({}, data.headers),\n            json: data.json,\n        };\n        //TODO a number of optional parameters are not necessarily being passed in here - Requires a review\n        //data - done via payloadFn\n        //timeout\n        //params\n        //responseType\n        //baseURL\n        if (data._payloadFn) {\n            const payload = data._payloadFn(parameters);\n            config.data = payload.body;\n            if (payload.type) {\n                if (config.headers) {\n                    config.headers['Content-Type'] = payload.type;\n                }\n                else {\n                    config.headers = { 'Content-Type': payload.type };\n                }\n            }\n        }\n        if (DEBUG) {\n            if (data.placeholders) {\n                //TODO redact the username from logs, although it would still appear in the URL...\n                console.log('URL Placeholders:');\n                data.placeholders.forEach(placeholder => {\n                    console.log(`  ${placeholder.toString()}`);\n                });\n            }\n            if (config.headers) {\n                console.log(`Headers: ${JSON.stringify(config.headers)}`);\n            }\n        }\n        if (data.statusCode) {\n            config.validateStatus = function (status) {\n                return status === data.statusCode;\n            };\n        }\n        return config;\n    }\n    getPostProcessing() {\n        return this._getData().postProcessing;\n    }\n    getErrorHandler() {\n        return this._getData().errorHandler;\n    }\n    payload(fn) {\n        this._getData()._payloadFn = fn;\n        return this;\n    }\n    requiresJsonConversion() {\n        const data = this._getData();\n        return data.json || (data.headers && data.headers['Accept'] === 'application/json');\n    }\n    get successCode() {\n        return this._getData().statusCode || 200;\n    }\n    get headers() {\n        return this._getData().headers;\n    }\n    _getData() {\n        return this._data;\n    }\n}\nexports.ApiEndpoint = ApiEndpoint;\nfunction replacePlaceholders(url, placeholders, parameters) {\n    let result = url;\n    if (placeholders) {\n        placeholders.forEach(function (placeholder) {\n            result = placeholder.inject(result, parameters);\n        });\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"script"}