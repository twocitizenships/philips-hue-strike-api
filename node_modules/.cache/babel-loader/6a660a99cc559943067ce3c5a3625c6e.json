{"ast":null,"code":"import { BridgeAction } from './BridgeAction';\nimport { ObjectType, StringType } from '../../types';\nimport { Scene } from '../scenes/Scene';\nimport { HueBridgeModelError } from '../../HueBridgeModelError';\nconst ATTRIBUTES = [new StringType({\n  name: 'scene'\n}), new ObjectType({\n  name: 'body'\n}), new ObjectType({\n  name: 'state'\n})];\nexport class SceneAction extends BridgeAction {\n  constructor(scene) {\n    super(ATTRIBUTES, 'PUT');\n    this.withScene(scene);\n  }\n\n  get address() {\n    return `/scenes/${this.scene}`;\n  }\n\n  get scene() {\n    return this.getAttributeValue('scene');\n  }\n\n  withScene(value) {\n    if (value instanceof Scene) {\n      this.setAttributeValue('scene', value.id);\n    } else {\n      this.setAttributeValue('scene', value);\n    }\n  }\n\n  withState(data) {\n    // Sensor state varies wildly, so just take data here, maybe consider building payloads later on...\n    this.setAttributeValue('state', data);\n    return this;\n  }\n\n  get body() {\n    const state = this.getAttributeValue('state');\n\n    if (state) {\n      return state;\n    }\n\n    throw new HueBridgeModelError('No state has been set on the SceneAction');\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/@peter-murray/hue-bridge-model/dist/esm/model/actions/SceneAction.js"],"names":["BridgeAction","ObjectType","StringType","Scene","HueBridgeModelError","ATTRIBUTES","name","SceneAction","constructor","scene","withScene","address","getAttributeValue","value","setAttributeValue","id","withState","data","body","state"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,aAAvC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,MAAMC,UAAU,GAAG,CACf,IAAIH,UAAJ,CAAe;AAAEI,EAAAA,IAAI,EAAE;AAAR,CAAf,CADe,EAEf,IAAIL,UAAJ,CAAe;AAAEK,EAAAA,IAAI,EAAE;AAAR,CAAf,CAFe,EAGf,IAAIL,UAAJ,CAAe;AAAEK,EAAAA,IAAI,EAAE;AAAR,CAAf,CAHe,CAAnB;AAKA,OAAO,MAAMC,WAAN,SAA0BP,YAA1B,CAAuC;AAC1CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMJ,UAAN,EAAkB,KAAlB;AACA,SAAKK,SAAL,CAAeD,KAAf;AACH;;AACU,MAAPE,OAAO,GAAG;AACV,WAAQ,WAAU,KAAKF,KAAM,EAA7B;AACH;;AACQ,MAALA,KAAK,GAAG;AACR,WAAO,KAAKG,iBAAL,CAAuB,OAAvB,CAAP;AACH;;AACDF,EAAAA,SAAS,CAACG,KAAD,EAAQ;AACb,QAAIA,KAAK,YAAYV,KAArB,EAA4B;AACxB,WAAKW,iBAAL,CAAuB,OAAvB,EAAgCD,KAAK,CAACE,EAAtC;AACH,KAFD,MAGK;AACD,WAAKD,iBAAL,CAAuB,OAAvB,EAAgCD,KAAhC;AACH;AACJ;;AACDG,EAAAA,SAAS,CAACC,IAAD,EAAO;AACZ;AACA,SAAKH,iBAAL,CAAuB,OAAvB,EAAgCG,IAAhC;AACA,WAAO,IAAP;AACH;;AACO,MAAJC,IAAI,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKP,iBAAL,CAAuB,OAAvB,CAAd;;AACA,QAAIO,KAAJ,EAAW;AACP,aAAOA,KAAP;AACH;;AACD,UAAM,IAAIf,mBAAJ,CAAwB,0CAAxB,CAAN;AACH;;AA9ByC;AAgC9C","sourcesContent":["import { BridgeAction } from './BridgeAction';\nimport { ObjectType, StringType } from '../../types';\nimport { Scene } from '../scenes/Scene';\nimport { HueBridgeModelError } from '../../HueBridgeModelError';\nconst ATTRIBUTES = [\n    new StringType({ name: 'scene' }),\n    new ObjectType({ name: 'body' }),\n    new ObjectType({ name: 'state' }),\n];\nexport class SceneAction extends BridgeAction {\n    constructor(scene) {\n        super(ATTRIBUTES, 'PUT');\n        this.withScene(scene);\n    }\n    get address() {\n        return `/scenes/${this.scene}`;\n    }\n    get scene() {\n        return this.getAttributeValue('scene');\n    }\n    withScene(value) {\n        if (value instanceof Scene) {\n            this.setAttributeValue('scene', value.id);\n        }\n        else {\n            this.setAttributeValue('scene', value);\n        }\n    }\n    withState(data) {\n        // Sensor state varies wildly, so just take data here, maybe consider building payloads later on...\n        this.setAttributeValue('state', data);\n        return this;\n    }\n    get body() {\n        const state = this.getAttributeValue('state');\n        if (state) {\n            return state;\n        }\n        throw new HueBridgeModelError('No state has been set on the SceneAction');\n    }\n}\n;\n"]},"metadata":{},"sourceType":"module"}