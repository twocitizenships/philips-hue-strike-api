{"ast":null,"code":"import ky from'ky';export const INVOICE_STATE_UNPAID='UNPAID';export const INVOICE_STATE_PAID='PAID';var client;// Set up an API client.\nconst init=(apiUrl,apikey)=>{client=ky.create({prefixUrl:apiUrl,headers:{'Authorization':`Bearer ${apikey}`,'Content-Type':'application/json'}});};const getHandle=()=>{const urlSearchParams=new URLSearchParams(window.location.search);const params=Object.fromEntries(urlSearchParams.entries());return params.handle;};const getProfile=async handle=>{return await client.get(`accounts/handle/${handle}/profile`).json();};const createInvoice=async function(handle,amount,currency){let description=arguments.length>3&&arguments[3]!==undefined?arguments[3]:\"Tip!\";return await client.post(`invoices/handle/${handle}`,{json:{amount:{currency:currency,amount:amount}}}).json();};const createQuote=async invoiceId=>{return await client.post(`invoices/${invoiceId}/quote`).json();};const getInvoice=async invoiceId=>{return await client.get(`invoices/${invoiceId}`).json();};const pollInvoice=async(invoice,until)=>{return await poll(()=>getInvoice(invoice.invoiceId),_ref=>{let{state}=_ref;return state==INVOICE_STATE_PAID;},until,1000).catch(err=>console.error(err));};const setCurrecyOptions=()=>{var fragment=document.createDocumentFragment();profile.currencies.forEach(function(curerncy,index){var opt=document.createElement('option');opt.innerHTML=curerncy.currency;opt.value=curerncy.currency;fragment.appendChild(opt);});currencyField.appendChild(fragment);currencyField.value=profile.currencies.find(c=>c.isDefaultCurrency).currency;};export const api={init,getHandle,getProfile,createInvoice,createQuote,getInvoice,pollInvoice,setCurrecyOptions};","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/src/lib/api.js"],"names":["ky","INVOICE_STATE_UNPAID","INVOICE_STATE_PAID","client","init","apiUrl","apikey","create","prefixUrl","headers","getHandle","urlSearchParams","URLSearchParams","window","location","search","params","Object","fromEntries","entries","handle","getProfile","get","json","createInvoice","amount","currency","description","post","createQuote","invoiceId","getInvoice","pollInvoice","invoice","until","poll","state","catch","err","console","error","setCurrecyOptions","fragment","document","createDocumentFragment","profile","currencies","forEach","curerncy","index","opt","createElement","innerHTML","value","appendChild","currencyField","find","c","isDefaultCurrency","api"],"mappings":"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","sourcesContent":["import ky from 'ky';\n\nexport const INVOICE_STATE_UNPAID = 'UNPAID';\nexport const INVOICE_STATE_PAID = 'PAID';\n\nvar client;\n\n// Set up an API client.\nconst init = (apiUrl, apikey) => {\n  client = ky.create({\n    prefixUrl: apiUrl,\n    headers: {\n      'Authorization': `Bearer ${apikey}`,\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nconst getHandle = () => {\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  const params = Object.fromEntries(urlSearchParams.entries());\n  return params.handle;\n}\n\nconst getProfile = async handle => {\n  return await client\n    .get(`accounts/handle/${handle}/profile`)\n    .json();\n}\n\nconst createInvoice = async (handle, amount, currency, description = \"Tip!\") => {\n  return await client\n    .post(`invoices/handle/${handle}`, { json: { amount: { currency: currency, amount: amount } } })\n    .json();\n}\n\nconst createQuote = async invoiceId => {\n  return await client\n    .post(`invoices/${invoiceId}/quote`)\n    .json();\n}\n\nconst getInvoice = async invoiceId => {\n  return await client\n    .get(`invoices/${invoiceId}`)\n    .json();\n}\n\nconst pollInvoice = async (invoice, until) => {\n  return await poll(() => getInvoice(invoice.invoiceId), ({ state }) => state == INVOICE_STATE_PAID, until, 1000)\n    .catch(err => console.error(err));\n}\n\nconst setCurrecyOptions = () => {\n  var fragment = document.createDocumentFragment();\n  profile.currencies.forEach(function(curerncy, index) {\n     var opt = document.createElement('option');\n     opt.innerHTML = curerncy.currency;\n     opt.value = curerncy.currency;\n     fragment.appendChild(opt);\n  });\n  currencyField.appendChild(fragment);\n  currencyField.value = profile.currencies.find(c => c.isDefaultCurrency).currency;\n}\n\nexport const api = {\n  init,\n  getHandle,\n  getProfile,\n  createInvoice,\n  createQuote,\n  getInvoice,\n  pollInvoice,\n  setCurrecyOptions\n};\n"]},"metadata":{},"sourceType":"module"}