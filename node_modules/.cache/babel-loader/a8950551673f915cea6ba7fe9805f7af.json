{"ast":null,"code":"import { BridgeObjectWithId } from '../BridgeObjectWithId';\nimport { BooleanType, ChoiceType, StringType } from '../../types';\nimport * as ruleConditions from './conditions/index';\nimport { createAction } from '../actions/index';\nconst ATTRIBUTES = [new StringType({\n  name: 'id'\n}), new StringType({\n  name: 'name',\n  maxLength: 32\n}), new StringType({\n  name: 'owner'\n}), new StringType({\n  name: 'created'\n}), new BooleanType({\n  name: 'recycle'\n}), new StringType({\n  name: 'lasttrigered'\n}), new StringType({\n  name: 'timestriggered'\n}), new ChoiceType({\n  name: 'status',\n  validValues: ['enabled', 'disabled', 'resourcedeleted', 'looperror'],\n  defaultValue: 'enabled'\n}) // conditions and actions are handled separately\n];\nexport class Rule extends BridgeObjectWithId {\n  constructor(id) {\n    super(ATTRIBUTES, id);\n    this._conditions = buildConditions();\n    this._actions = buildActions();\n  }\n\n  get name() {\n    return this.getAttributeValue('name');\n  }\n\n  set name(value) {\n    this.setAttributeValue('name', value);\n  }\n\n  get created() {\n    return this.getAttributeValue('created');\n  }\n\n  get owner() {\n    return this.getAttributeValue('owner');\n  }\n\n  get lasttriggered() {\n    return this.getAttributeValue('lasttriggered');\n  }\n\n  get timestriggered() {\n    return this.getAttributeValue('timestriggered');\n  }\n\n  get status() {\n    return this.getAttributeValue('status');\n  }\n\n  set recycle(val) {\n    this.setAttributeValue('recycle', val);\n  }\n\n  get recycle() {\n    return this.getAttributeValue('recycle');\n  }\n\n  get conditions() {\n    return this._conditions;\n  }\n\n  addCondition(condition) {\n    this._conditions.push(buildCondition(condition));\n\n    return this;\n  }\n\n  removeConditionAt(idx) {\n    this._conditions.splice(idx, 1);\n  }\n\n  resetConditions() {\n    this._conditions = buildConditions();\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  addAction(action) {\n    this._actions.push(buildAction(action));\n\n    return this;\n  }\n\n  removeActionAt(idx) {\n    this._actions.splice(idx, 1);\n  }\n\n  resetActions() {\n    this._actions = buildActions();\n  }\n\n  getConditionsPayload() {\n    const result = [];\n    this.conditions.forEach(condition => {\n      result.push(condition.payload);\n    });\n    return result;\n  }\n\n  getActionsPayload() {\n    const result = [];\n    this.actions.forEach(action => {\n      result.push(action.payload);\n    });\n    return result;\n  }\n\n  toStringDetailed() {\n    let result = super.toStringDetailed();\n    result += '\\n  Conditions:';\n    this.conditions.forEach(condition => {\n      result += `\\n    ${condition.toString()}`;\n    });\n    result += '\\n  Actions:';\n    this.actions.forEach(action => {\n      result += `\\n    ${action.toString()}`;\n    });\n    return result;\n  }\n\n  _populate(data) {\n    super._populate(data);\n\n    this._conditions = buildConditions(data ? data.conditions : null);\n    this._actions = buildActions(data ? data.actions : null);\n    return this;\n  }\n\n  getHuePayload() {\n    const data = super.getHuePayload();\n    data.conditions = this.getConditionsPayload();\n    data.actions = this.getActionsPayload();\n    return data;\n  }\n\n  getJsonPayload() {\n    const data = super.getJsonPayload();\n    data.conditions = this.getConditionsPayload();\n    data.actions = this.getActionsPayload();\n    return data;\n  }\n\n}\n;\n\nfunction buildCondition(condition) {\n  return ruleConditions.createRuleCondition(condition);\n}\n\nfunction buildConditions(conditions) {\n  const result = [];\n\n  if (conditions) {\n    conditions.forEach(condition => {\n      result.push(buildCondition(condition));\n    });\n  }\n\n  return result;\n}\n\nfunction buildAction(action) {\n  return createAction(action);\n}\n\nfunction buildActions(actions) {\n  const result = [];\n\n  if (actions) {\n    actions.forEach(action => {\n      result.push(buildAction(action));\n    });\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/@peter-murray/hue-bridge-model/dist/esm/model/rules/Rule.js"],"names":["BridgeObjectWithId","BooleanType","ChoiceType","StringType","ruleConditions","createAction","ATTRIBUTES","name","maxLength","validValues","defaultValue","Rule","constructor","id","_conditions","buildConditions","_actions","buildActions","getAttributeValue","value","setAttributeValue","created","owner","lasttriggered","timestriggered","status","recycle","val","conditions","addCondition","condition","push","buildCondition","removeConditionAt","idx","splice","resetConditions","actions","addAction","action","buildAction","removeActionAt","resetActions","getConditionsPayload","result","forEach","payload","getActionsPayload","toStringDetailed","toString","_populate","data","getHuePayload","getJsonPayload","createRuleCondition"],"mappings":"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","sourcesContent":["import { BridgeObjectWithId } from '../BridgeObjectWithId';\nimport { BooleanType, ChoiceType, StringType } from '../../types';\nimport * as ruleConditions from './conditions/index';\nimport { createAction } from '../actions/index';\nconst ATTRIBUTES = [\n    new StringType({ name: 'id' }),\n    new StringType({ name: 'name', maxLength: 32 }),\n    new StringType({ name: 'owner' }),\n    new StringType({ name: 'created' }),\n    new BooleanType({ name: 'recycle' }),\n    new StringType({ name: 'lasttrigered' }),\n    new StringType({ name: 'timestriggered' }),\n    new ChoiceType({\n        name: 'status',\n        validValues: ['enabled', 'disabled', 'resourcedeleted', 'looperror'],\n        defaultValue: 'enabled'\n    }),\n    // conditions and actions are handled separately\n];\nexport class Rule extends BridgeObjectWithId {\n    constructor(id) {\n        super(ATTRIBUTES, id);\n        this._conditions = buildConditions();\n        this._actions = buildActions();\n    }\n    get name() {\n        return this.getAttributeValue('name');\n    }\n    set name(value) {\n        this.setAttributeValue('name', value);\n    }\n    get created() {\n        return this.getAttributeValue('created');\n    }\n    get owner() {\n        return this.getAttributeValue('owner');\n    }\n    get lasttriggered() {\n        return this.getAttributeValue('lasttriggered');\n    }\n    get timestriggered() {\n        return this.getAttributeValue('timestriggered');\n    }\n    get status() {\n        return this.getAttributeValue('status');\n    }\n    set recycle(val) {\n        this.setAttributeValue('recycle', val);\n    }\n    get recycle() {\n        return this.getAttributeValue('recycle');\n    }\n    get conditions() {\n        return this._conditions;\n    }\n    addCondition(condition) {\n        this._conditions.push(buildCondition(condition));\n        return this;\n    }\n    removeConditionAt(idx) {\n        this._conditions.splice(idx, 1);\n    }\n    resetConditions() {\n        this._conditions = buildConditions();\n    }\n    get actions() {\n        return this._actions;\n    }\n    addAction(action) {\n        this._actions.push(buildAction(action));\n        return this;\n    }\n    removeActionAt(idx) {\n        this._actions.splice(idx, 1);\n    }\n    resetActions() {\n        this._actions = buildActions();\n    }\n    getConditionsPayload() {\n        const result = [];\n        this.conditions.forEach(condition => {\n            result.push(condition.payload);\n        });\n        return result;\n    }\n    getActionsPayload() {\n        const result = [];\n        this.actions.forEach(action => {\n            result.push(action.payload);\n        });\n        return result;\n    }\n    toStringDetailed() {\n        let result = super.toStringDetailed();\n        result += '\\n  Conditions:';\n        this.conditions.forEach(condition => {\n            result += `\\n    ${condition.toString()}`;\n        });\n        result += '\\n  Actions:';\n        this.actions.forEach(action => {\n            result += `\\n    ${action.toString()}`;\n        });\n        return result;\n    }\n    _populate(data) {\n        super._populate(data);\n        this._conditions = buildConditions(data ? data.conditions : null);\n        this._actions = buildActions(data ? data.actions : null);\n        return this;\n    }\n    getHuePayload() {\n        const data = super.getHuePayload();\n        data.conditions = this.getConditionsPayload();\n        data.actions = this.getActionsPayload();\n        return data;\n    }\n    getJsonPayload() {\n        const data = super.getJsonPayload();\n        data.conditions = this.getConditionsPayload();\n        data.actions = this.getActionsPayload();\n        return data;\n    }\n}\n;\nfunction buildCondition(condition) {\n    return ruleConditions.createRuleCondition(condition);\n}\nfunction buildConditions(conditions) {\n    const result = [];\n    if (conditions) {\n        conditions.forEach(condition => {\n            result.push(buildCondition(condition));\n        });\n    }\n    return result;\n}\nfunction buildAction(action) {\n    return createAction(action);\n}\nfunction buildActions(actions) {\n    const result = [];\n    if (actions) {\n        actions.forEach(action => {\n            result.push(buildAction(action));\n        });\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}