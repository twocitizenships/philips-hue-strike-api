{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HueApiRateLimits = void 0; // Set up a limiter on the group state changes from the library to once per second as per guidance documentation\n\nconst DEFAULT_GROUP_RATE_LIMITS = {\n  maxConcurrent: 1,\n  minTime: 1000 // how long to wait before launching another request in ms\n\n}; // As per Bridge documentation guidance, limit the number of calls to the light state changes to 10 per second max\n\nconst DEFAULT_LIGHT_RATE_LIMITS = {\n  maxConcurrent: 1,\n  minTime: 60 // how long to wait before launching another request in ms\n\n}; // Limiting the general rate limits across the API to a hue bridge\n\nconst DEFAULT_RATE_LIMITS = {\n  maxConcurrent: 4,\n  minTime: 50 // how long to wait before launching another request in ms\n\n};\n\nclass HueApiRateLimits {\n  constructor(rateLimits) {\n    if (rateLimits) {\n      this._rateLimits = {\n        transport: rateLimits.transport || DEFAULT_RATE_LIMITS,\n        group: rateLimits.group || DEFAULT_GROUP_RATE_LIMITS,\n        light: rateLimits.light || DEFAULT_LIGHT_RATE_LIMITS\n      };\n    } else {\n      this._rateLimits = {\n        transport: DEFAULT_RATE_LIMITS,\n        group: DEFAULT_GROUP_RATE_LIMITS,\n        light: DEFAULT_LIGHT_RATE_LIMITS\n      };\n    }\n  }\n\n  get groupRateLimit() {\n    return this._rateLimits.group || DEFAULT_GROUP_RATE_LIMITS;\n  }\n\n  get lightRateLimit() {\n    return this._rateLimits.light || DEFAULT_LIGHT_RATE_LIMITS;\n  }\n\n  get transportRateLimit() {\n    return this._rateLimits.transport || DEFAULT_RATE_LIMITS;\n  }\n\n}\n\nexports.HueApiRateLimits = HueApiRateLimits;","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/node-hue-api/dist/cjs/api/HueApiRateLimits.js"],"names":["Object","defineProperty","exports","value","HueApiRateLimits","DEFAULT_GROUP_RATE_LIMITS","maxConcurrent","minTime","DEFAULT_LIGHT_RATE_LIMITS","DEFAULT_RATE_LIMITS","constructor","rateLimits","_rateLimits","transport","group","light","groupRateLimit","lightRateLimit","transportRateLimit"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC,C,CACA;;AACA,MAAMC,yBAAyB,GAAG;AAC9BC,EAAAA,aAAa,EAAE,CADe;AAE9BC,EAAAA,OAAO,EAAE,IAFqB,CAEhB;;AAFgB,CAAlC,C,CAIA;;AACA,MAAMC,yBAAyB,GAAG;AAC9BF,EAAAA,aAAa,EAAE,CADe;AAE9BC,EAAAA,OAAO,EAAE,EAFqB,CAElB;;AAFkB,CAAlC,C,CAIA;;AACA,MAAME,mBAAmB,GAAG;AACxBH,EAAAA,aAAa,EAAE,CADS;AAExBC,EAAAA,OAAO,EAAE,EAFe,CAEZ;;AAFY,CAA5B;;AAIA,MAAMH,gBAAN,CAAuB;AACnBM,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,QAAIA,UAAJ,EAAgB;AACZ,WAAKC,WAAL,GAAmB;AACfC,QAAAA,SAAS,EAAEF,UAAU,CAACE,SAAX,IAAwBJ,mBADpB;AAEfK,QAAAA,KAAK,EAAEH,UAAU,CAACG,KAAX,IAAoBT,yBAFZ;AAGfU,QAAAA,KAAK,EAAEJ,UAAU,CAACI,KAAX,IAAoBP;AAHZ,OAAnB;AAKH,KAND,MAOK;AACD,WAAKI,WAAL,GAAmB;AACfC,QAAAA,SAAS,EAAEJ,mBADI;AAEfK,QAAAA,KAAK,EAAET,yBAFQ;AAGfU,QAAAA,KAAK,EAAEP;AAHQ,OAAnB;AAKH;AACJ;;AACiB,MAAdQ,cAAc,GAAG;AACjB,WAAO,KAAKJ,WAAL,CAAiBE,KAAjB,IAA0BT,yBAAjC;AACH;;AACiB,MAAdY,cAAc,GAAG;AACjB,WAAO,KAAKL,WAAL,CAAiBG,KAAjB,IAA0BP,yBAAjC;AACH;;AACqB,MAAlBU,kBAAkB,GAAG;AACrB,WAAO,KAAKN,WAAL,CAAiBC,SAAjB,IAA8BJ,mBAArC;AACH;;AAzBkB;;AA2BvBP,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HueApiRateLimits = void 0;\n// Set up a limiter on the group state changes from the library to once per second as per guidance documentation\nconst DEFAULT_GROUP_RATE_LIMITS = {\n    maxConcurrent: 1,\n    minTime: 1000 // how long to wait before launching another request in ms\n};\n// As per Bridge documentation guidance, limit the number of calls to the light state changes to 10 per second max\nconst DEFAULT_LIGHT_RATE_LIMITS = {\n    maxConcurrent: 1,\n    minTime: 60 // how long to wait before launching another request in ms\n};\n// Limiting the general rate limits across the API to a hue bridge\nconst DEFAULT_RATE_LIMITS = {\n    maxConcurrent: 4,\n    minTime: 50 // how long to wait before launching another request in ms\n};\nclass HueApiRateLimits {\n    constructor(rateLimits) {\n        if (rateLimits) {\n            this._rateLimits = {\n                transport: rateLimits.transport || DEFAULT_RATE_LIMITS,\n                group: rateLimits.group || DEFAULT_GROUP_RATE_LIMITS,\n                light: rateLimits.light || DEFAULT_LIGHT_RATE_LIMITS\n            };\n        }\n        else {\n            this._rateLimits = {\n                transport: DEFAULT_RATE_LIMITS,\n                group: DEFAULT_GROUP_RATE_LIMITS,\n                light: DEFAULT_LIGHT_RATE_LIMITS,\n            };\n        }\n    }\n    get groupRateLimit() {\n        return this._rateLimits.group || DEFAULT_GROUP_RATE_LIMITS;\n    }\n    get lightRateLimit() {\n        return this._rateLimits.light || DEFAULT_LIGHT_RATE_LIMITS;\n    }\n    get transportRateLimit() {\n        return this._rateLimits.transport || DEFAULT_RATE_LIMITS;\n    }\n}\nexports.HueApiRateLimits = HueApiRateLimits;\n"]},"metadata":{},"sourceType":"script"}