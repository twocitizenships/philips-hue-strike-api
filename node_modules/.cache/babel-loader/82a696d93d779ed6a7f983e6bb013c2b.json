{"ast":null,"code":"\"use strict\";\n\nvar BottleneckError, States;\nBottleneckError = require(\"./BottleneckError\");\nStates = class States {\n  constructor(status1) {\n    this.status = status1;\n    this._jobs = {};\n    this.counts = this.status.map(function () {\n      return 0;\n    });\n  }\n\n  next(id) {\n    var current, next;\n    current = this._jobs[id];\n    next = current + 1;\n\n    if (current != null && next < this.status.length) {\n      this.counts[current]--;\n      this.counts[next]++;\n      return this._jobs[id]++;\n    } else if (current != null) {\n      this.counts[current]--;\n      return delete this._jobs[id];\n    }\n  }\n\n  start(id) {\n    var initial;\n    initial = 0;\n    this._jobs[id] = initial;\n    return this.counts[initial]++;\n  }\n\n  remove(id) {\n    var current;\n    current = this._jobs[id];\n\n    if (current != null) {\n      this.counts[current]--;\n      delete this._jobs[id];\n    }\n\n    return current != null;\n  }\n\n  jobStatus(id) {\n    var ref;\n    return (ref = this.status[this._jobs[id]]) != null ? ref : null;\n  }\n\n  statusJobs(status) {\n    var k, pos, ref, results, v;\n\n    if (status != null) {\n      pos = this.status.indexOf(status);\n\n      if (pos < 0) {\n        throw new BottleneckError(`status must be one of ${this.status.join(', ')}`);\n      }\n\n      ref = this._jobs;\n      results = [];\n\n      for (k in ref) {\n        v = ref[k];\n\n        if (v === pos) {\n          results.push(k);\n        }\n      }\n\n      return results;\n    } else {\n      return Object.keys(this._jobs);\n    }\n  }\n\n  statusCounts() {\n    return this.counts.reduce((acc, v, i) => {\n      acc[this.status[i]] = v;\n      return acc;\n    }, {});\n  }\n\n};\nmodule.exports = States;","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/bottleneck/lib/States.js"],"names":["BottleneckError","States","require","constructor","status1","status","_jobs","counts","map","next","id","current","length","start","initial","remove","jobStatus","ref","statusJobs","k","pos","results","v","indexOf","join","push","Object","keys","statusCounts","reduce","acc","i","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar BottleneckError, States;\nBottleneckError = require(\"./BottleneckError\");\nStates = class States {\n  constructor(status1) {\n    this.status = status1;\n    this._jobs = {};\n    this.counts = this.status.map(function () {\n      return 0;\n    });\n  }\n\n  next(id) {\n    var current, next;\n    current = this._jobs[id];\n    next = current + 1;\n\n    if (current != null && next < this.status.length) {\n      this.counts[current]--;\n      this.counts[next]++;\n      return this._jobs[id]++;\n    } else if (current != null) {\n      this.counts[current]--;\n      return delete this._jobs[id];\n    }\n  }\n\n  start(id) {\n    var initial;\n    initial = 0;\n    this._jobs[id] = initial;\n    return this.counts[initial]++;\n  }\n\n  remove(id) {\n    var current;\n    current = this._jobs[id];\n\n    if (current != null) {\n      this.counts[current]--;\n      delete this._jobs[id];\n    }\n\n    return current != null;\n  }\n\n  jobStatus(id) {\n    var ref;\n    return (ref = this.status[this._jobs[id]]) != null ? ref : null;\n  }\n\n  statusJobs(status) {\n    var k, pos, ref, results, v;\n\n    if (status != null) {\n      pos = this.status.indexOf(status);\n\n      if (pos < 0) {\n        throw new BottleneckError(`status must be one of ${this.status.join(', ')}`);\n      }\n\n      ref = this._jobs;\n      results = [];\n\n      for (k in ref) {\n        v = ref[k];\n\n        if (v === pos) {\n          results.push(k);\n        }\n      }\n\n      return results;\n    } else {\n      return Object.keys(this._jobs);\n    }\n  }\n\n  statusCounts() {\n    return this.counts.reduce((acc, v, i) => {\n      acc[this.status[i]] = v;\n      return acc;\n    }, {});\n  }\n\n};\nmodule.exports = States;"]},"metadata":{},"sourceType":"script"}