{"ast":null,"code":"\"use strict\";\n\nvar headers, lua, templates;\nlua = require(\"./lua.json\");\nheaders = {\n  refs: lua[\"refs.lua\"],\n  validate_keys: lua[\"validate_keys.lua\"],\n  validate_client: lua[\"validate_client.lua\"],\n  refresh_expiration: lua[\"refresh_expiration.lua\"],\n  process_tick: lua[\"process_tick.lua\"],\n  conditions_check: lua[\"conditions_check.lua\"],\n  get_time: lua[\"get_time.lua\"]\n};\n\nexports.allKeys = function (id) {\n  return [\n  /*\n  HASH\n  */\n  `b_${id}_settings`,\n  /*\n  HASH\n  job index -> weight\n  */\n  `b_${id}_job_weights`,\n  /*\n  ZSET\n  job index -> expiration\n  */\n  `b_${id}_job_expirations`,\n  /*\n  HASH\n  job index -> client\n  */\n  `b_${id}_job_clients`,\n  /*\n  ZSET\n  client -> sum running\n  */\n  `b_${id}_client_running`,\n  /*\n  HASH\n  client -> num queued\n  */\n  `b_${id}_client_num_queued`,\n  /*\n  ZSET\n  client -> last job registered\n  */\n  `b_${id}_client_last_registered`,\n  /*\n  ZSET\n  client -> last seen\n  */\n  `b_${id}_client_last_seen`];\n};\n\ntemplates = {\n  init: {\n    keys: exports.allKeys,\n    headers: [\"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"init.lua\"]\n  },\n  group_check: {\n    keys: exports.allKeys,\n    headers: [],\n    refresh_expiration: false,\n    code: lua[\"group_check.lua\"]\n  },\n  register_client: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\"],\n    refresh_expiration: false,\n    code: lua[\"register_client.lua\"]\n  },\n  blacklist_client: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\"],\n    refresh_expiration: false,\n    code: lua[\"blacklist_client.lua\"]\n  },\n  heartbeat: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"heartbeat.lua\"]\n  },\n  update_settings: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"update_settings.lua\"]\n  },\n  running: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"running.lua\"]\n  },\n  queued: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\"],\n    refresh_expiration: false,\n    code: lua[\"queued.lua\"]\n  },\n  done: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"done.lua\"]\n  },\n  check: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\", \"conditions_check\"],\n    refresh_expiration: false,\n    code: lua[\"check.lua\"]\n  },\n  submit: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\", \"conditions_check\"],\n    refresh_expiration: true,\n    code: lua[\"submit.lua\"]\n  },\n  register: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\", \"conditions_check\"],\n    refresh_expiration: true,\n    code: lua[\"register.lua\"]\n  },\n  free: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"free.lua\"]\n  },\n  current_reservoir: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"current_reservoir.lua\"]\n  },\n  increment_reservoir: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"increment_reservoir.lua\"]\n  }\n};\nexports.names = Object.keys(templates);\n\nexports.keys = function (name, id) {\n  return templates[name].keys(id);\n};\n\nexports.payload = function (name) {\n  var template;\n  template = templates[name];\n  return Array.prototype.concat(headers.refs, template.headers.map(function (h) {\n    return headers[h];\n  }), template.refresh_expiration ? headers.refresh_expiration : \"\", template.code).join(\"\\n\");\n};","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/bottleneck/lib/Scripts.js"],"names":["headers","lua","templates","require","refs","validate_keys","validate_client","refresh_expiration","process_tick","conditions_check","get_time","exports","allKeys","id","init","keys","code","group_check","register_client","blacklist_client","heartbeat","update_settings","running","queued","done","check","submit","register","free","current_reservoir","increment_reservoir","names","Object","name","payload","template","Array","prototype","concat","map","h","join"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar headers, lua, templates;\nlua = require(\"./lua.json\");\nheaders = {\n  refs: lua[\"refs.lua\"],\n  validate_keys: lua[\"validate_keys.lua\"],\n  validate_client: lua[\"validate_client.lua\"],\n  refresh_expiration: lua[\"refresh_expiration.lua\"],\n  process_tick: lua[\"process_tick.lua\"],\n  conditions_check: lua[\"conditions_check.lua\"],\n  get_time: lua[\"get_time.lua\"]\n};\n\nexports.allKeys = function (id) {\n  return [\n  /*\n  HASH\n  */\n  `b_${id}_settings`,\n  /*\n  HASH\n  job index -> weight\n  */\n  `b_${id}_job_weights`,\n  /*\n  ZSET\n  job index -> expiration\n  */\n  `b_${id}_job_expirations`,\n  /*\n  HASH\n  job index -> client\n  */\n  `b_${id}_job_clients`,\n  /*\n  ZSET\n  client -> sum running\n  */\n  `b_${id}_client_running`,\n  /*\n  HASH\n  client -> num queued\n  */\n  `b_${id}_client_num_queued`,\n  /*\n  ZSET\n  client -> last job registered\n  */\n  `b_${id}_client_last_registered`,\n  /*\n  ZSET\n  client -> last seen\n  */\n  `b_${id}_client_last_seen`];\n};\n\ntemplates = {\n  init: {\n    keys: exports.allKeys,\n    headers: [\"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"init.lua\"]\n  },\n  group_check: {\n    keys: exports.allKeys,\n    headers: [],\n    refresh_expiration: false,\n    code: lua[\"group_check.lua\"]\n  },\n  register_client: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\"],\n    refresh_expiration: false,\n    code: lua[\"register_client.lua\"]\n  },\n  blacklist_client: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\"],\n    refresh_expiration: false,\n    code: lua[\"blacklist_client.lua\"]\n  },\n  heartbeat: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"heartbeat.lua\"]\n  },\n  update_settings: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"update_settings.lua\"]\n  },\n  running: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"running.lua\"]\n  },\n  queued: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\"],\n    refresh_expiration: false,\n    code: lua[\"queued.lua\"]\n  },\n  done: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"done.lua\"]\n  },\n  check: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\", \"conditions_check\"],\n    refresh_expiration: false,\n    code: lua[\"check.lua\"]\n  },\n  submit: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\", \"conditions_check\"],\n    refresh_expiration: true,\n    code: lua[\"submit.lua\"]\n  },\n  register: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\", \"conditions_check\"],\n    refresh_expiration: true,\n    code: lua[\"register.lua\"]\n  },\n  free: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"free.lua\"]\n  },\n  current_reservoir: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"current_reservoir.lua\"]\n  },\n  increment_reservoir: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"increment_reservoir.lua\"]\n  }\n};\nexports.names = Object.keys(templates);\n\nexports.keys = function (name, id) {\n  return templates[name].keys(id);\n};\n\nexports.payload = function (name) {\n  var template;\n  template = templates[name];\n  return Array.prototype.concat(headers.refs, template.headers.map(function (h) {\n    return headers[h];\n  }), template.refresh_expiration ? headers.refresh_expiration : \"\", template.code).join(\"\\n\");\n};"]},"metadata":{},"sourceType":"script"}