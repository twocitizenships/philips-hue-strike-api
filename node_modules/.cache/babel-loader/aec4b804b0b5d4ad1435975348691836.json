{"ast":null,"code":"\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar Events;\nEvents = class Events {\n  constructor(instance) {\n    var _this2 = this;\n\n    this.instance = instance;\n    this._events = {};\n\n    if (this.instance.on != null || this.instance.once != null || this.instance.removeAllListeners != null) {\n      throw new Error(\"An Emitter already exists for this object\");\n    }\n\n    this.instance.on = (name, cb) => {\n      return this._addListener(name, \"many\", cb);\n    };\n\n    this.instance.once = (name, cb) => {\n      return this._addListener(name, \"once\", cb);\n    };\n\n    this.instance.removeAllListeners = function () {\n      let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (name != null) {\n        return delete _this2._events[name];\n      } else {\n        return _this2._events = {};\n      }\n    };\n  }\n\n  _addListener(name, status, cb) {\n    var base;\n\n    if ((base = this._events)[name] == null) {\n      base[name] = [];\n    }\n\n    this._events[name].push({\n      cb,\n      status\n    });\n\n    return this.instance;\n  }\n\n  listenerCount(name) {\n    if (this._events[name] != null) {\n      return this._events[name].length;\n    } else {\n      return 0;\n    }\n  }\n\n  trigger(name) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var e, promises;\n\n      try {\n        if (name !== \"debug\") {\n          _this.trigger(\"debug\", `Event triggered: ${name}`, args);\n        }\n\n        if (_this._events[name] == null) {\n          return;\n        }\n\n        _this._events[name] = _this._events[name].filter(function (listener) {\n          return listener.status !== \"none\";\n        });\n        promises = _this._events[name].map( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (listener) {\n            var e, returned;\n\n            if (listener.status === \"none\") {\n              return;\n            }\n\n            if (listener.status === \"once\") {\n              listener.status = \"none\";\n            }\n\n            try {\n              returned = typeof listener.cb === \"function\" ? listener.cb(...args) : void 0;\n\n              if (typeof (returned != null ? returned.then : void 0) === \"function\") {\n                return yield returned;\n              } else {\n                return returned;\n              }\n            } catch (error) {\n              e = error;\n\n              if (\"name\" !== \"error\") {\n                _this.trigger(\"error\", e);\n              }\n\n              return null;\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n        return (yield Promise.all(promises)).find(function (x) {\n          return x != null;\n        });\n      } catch (error) {\n        e = error;\n\n        if (\"name\" !== \"error\") {\n          _this.trigger(\"error\", e);\n        }\n\n        return null;\n      }\n    })();\n  }\n\n};\nmodule.exports = Events;","map":{"version":3,"sources":["/Users/clusk/Documents/OtherRepositories/StrikeElectric/node_modules/bottleneck/lib/Events.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","Events","constructor","instance","_events","on","once","removeAllListeners","Error","name","cb","_addListener","status","base","push","listenerCount","length","trigger","_this","e","promises","filter","listener","map","_ref","returned","_x","all","find","x","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Events;\nEvents = class Events {\n  constructor(instance) {\n    this.instance = instance;\n    this._events = {};\n\n    if (this.instance.on != null || this.instance.once != null || this.instance.removeAllListeners != null) {\n      throw new Error(\"An Emitter already exists for this object\");\n    }\n\n    this.instance.on = (name, cb) => {\n      return this._addListener(name, \"many\", cb);\n    };\n\n    this.instance.once = (name, cb) => {\n      return this._addListener(name, \"once\", cb);\n    };\n\n    this.instance.removeAllListeners = (name = null) => {\n      if (name != null) {\n        return delete this._events[name];\n      } else {\n        return this._events = {};\n      }\n    };\n  }\n\n  _addListener(name, status, cb) {\n    var base;\n\n    if ((base = this._events)[name] == null) {\n      base[name] = [];\n    }\n\n    this._events[name].push({\n      cb,\n      status\n    });\n\n    return this.instance;\n  }\n\n  listenerCount(name) {\n    if (this._events[name] != null) {\n      return this._events[name].length;\n    } else {\n      return 0;\n    }\n  }\n\n  trigger(name, ...args) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var e, promises;\n\n      try {\n        if (name !== \"debug\") {\n          _this.trigger(\"debug\", `Event triggered: ${name}`, args);\n        }\n\n        if (_this._events[name] == null) {\n          return;\n        }\n\n        _this._events[name] = _this._events[name].filter(function (listener) {\n          return listener.status !== \"none\";\n        });\n        promises = _this._events[name].map(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(function* (listener) {\n            var e, returned;\n\n            if (listener.status === \"none\") {\n              return;\n            }\n\n            if (listener.status === \"once\") {\n              listener.status = \"none\";\n            }\n\n            try {\n              returned = typeof listener.cb === \"function\" ? listener.cb(...args) : void 0;\n\n              if (typeof (returned != null ? returned.then : void 0) === \"function\") {\n                return yield returned;\n              } else {\n                return returned;\n              }\n            } catch (error) {\n              e = error;\n\n              if (\"name\" !== \"error\") {\n                _this.trigger(\"error\", e);\n              }\n\n              return null;\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n        return (yield Promise.all(promises)).find(function (x) {\n          return x != null;\n        });\n      } catch (error) {\n        e = error;\n\n        if (\"name\" !== \"error\") {\n          _this.trigger(\"error\", e);\n        }\n\n        return null;\n      }\n    })();\n  }\n\n};\nmodule.exports = Events;"]},"metadata":{},"sourceType":"script"}